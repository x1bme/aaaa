// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Device {

  /// <summary>Holder for reflection information generated from common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxjb21tb24ucHJvdG8SBmRldmljZRoMbmFub3BiLnByb3RvIlEKBkhlYWRl",
            "chIYCglkZXZpY2VfaWQYASABKAlCBZI/AgglEhcKD3NlcXVlbmNlX251bWJl",
            "chgCIAEoDRIUCgx0aW1lc3RhbXBfbXMYAyABKAQiSgoMUmVzcG9uc2VCYXNl",
            "EiIKBnN0YXR1cxgBIAEoDjISLmRldmljZS5TdGF0dXNDb2RlEhYKB21lc3Nh",
            "Z2UYAiABKAlCBZI/AghAIocBCglBbGVydEluZm8SHwoEY29kZRgBIAEoDjIR",
            "LmRldmljZS5FcnJvckNvZGUSJwoIc2V2ZXJpdHkYAiABKA4yFS5kZXZpY2Uu",
            "U2V2ZXJpdHlMZXZlbBIaCgtkZXNjcmlwdGlvbhgDIAEoCUIFkj8CCEASFAoM",
            "dGltZXN0YW1wX21zGAQgASgEKp0BCgpTdGF0dXNDb2RlEg0KCVNUQVRVU19P",
            "SxAAEhAKDFNUQVRVU19FUlJPUhABEhgKFFNUQVRVU19JTlZBTElEX1BBUkFN",
            "EAISFwoTU1RBVFVTX1VOQVVUSE9SSVpFRBADEhYKElNUQVRVU19VTkFWQUlM",
            "QUJMRRAEEg8KC1NUQVRVU19CVVNZEAUSEgoOU1RBVFVTX1RJTUVPVVQQBipj",
            "Cg1TZXZlcml0eUxldmVsEhEKDVNFVkVSSVRZX0lORk8QABIUChBTRVZFUklU",
            "WV9XQVJOSU5HEAESEgoOU0VWRVJJVFlfRVJST1IQAhIVChFTRVZFUklUWV9D",
            "UklUSUNBTBADKpAICglFcnJvckNvZGUSDAoITk9fRVJST1IQABIXChNIRUFM",
            "VEhfVEVNUF9XQVJOSU5HEGUSGAoUSEVBTFRIX1RFTVBfQ1JJVElDQUwQZhIT",
            "Cg9IRUFMVEhfTUVNX1dBUk4QZxIUChBIRUFMVEhfTUVNX0VSUk9SEGgSEwoP",
            "SEVBTFRIX0NQVV9XQVJOEGkSFAoQSEVBTFRIX0NQVV9FUlJPUhBqEh0KGEZX",
            "X1VQREFURV9JTkZPX0lOSVRJQVRFRBDJARIcChdGV19VUERBVEVfVkVSSUZZ",
            "X0ZBSUxFRBDKARIcChdGV19VUERBVEVfU1RPUkFHRV9FUlJPUhDLARIbChZG",
            "V19DT1JSVVBUSU9OX0RFVEVDVEVEEMwBEhkKFEZXX1VQREFURV9JTkNPTVBM",
            "RVRFEM0BEh0KGEZXX1VQREFURV9JTkZPX0NPTVBMRVRFRBDOARIeChlEQVRB",
            "X0JVRkZFUl9ORUFSX0NBUEFDSVRZEK0CEhoKFURBVEFfQlVGRkVSX09WRVJX",
            "UklURRCuAhIaChVEQVRBX1FVQUxJVFlfREVHUkFERUQQrwISHgoZREFUQV9U",
            "UkFOU01JU1NJT05fRkFJTFVSRRCwAhIYChNEQVRBX0NPTkZJR19VUERBVEVE",
            "ELECEhsKFkNBTF9QQVJBTV9PVVRfT0ZfUkFOR0UQkQMSGQoUQ0FMX1BST0NF",
            "RFVSRV9GQUlMRUQQkgMSFwoSQ0FMX0lORk9fQ09NUExFVEVEEJMDEhcKEkNB",
            "TF9FWFBJUllfV0FSTklORxCUAxIcChdERVZJQ0VfSU5GT19JTklUSUFMSVpF",
            "RBD1AxIWChFERVZJQ0VfSU5GT19SRVNFVBD2AxIgChtERVZJQ0VfRVJSX1VO",
            "RVhQRUNURURfUkVTRVQQ9wMSIgodREVWSUNFX0VSUl9TRUNVUkVfQk9PVF9G",
            "QUlMRUQQ+AMSIQocREVWSUNFX0VSUl9DT01QT05FTlRfRkFJTFVSRRD5AxIb",
            "ChZERVZJQ0VfV0FSTl9DTE9DS19TWU5DEPoDEhoKFURFVklDRV9GQVVMVF9I",
            "QVJEV0FSRRD7AxIfChpERVZJQ0VfRkFVTFRfU1RPUkFHRV9MSU1JVBD8AxId",
            "ChhERVZJQ0VfV0FSTl9DT01NX1RJTUVPVVQQ/QMSIQocREVWSUNFX0VSUl9D",
            "T01NX0xJTktfRkFJTFVSRRD+AxIgChtERVZJQ0VfV0FSTl9JTlZBTElEX0NP",
            "TU1BTkQQ/wMSHAoXREVWSUNFX0VSUl9BVVRIX0ZBSUxVUkUQgAQSIQocREVW",
            "SUNFX0lORk9fQ09OTl9FU1RBQkxJU0hFRBCBBBIgChtERVZJQ0VfSU5GT19D",
            "T05OX1RFUk1JTkFURUQQggQqtAEKC1Jlc2V0UmVhc29uEhwKGFJFU0VUX1JF",
            "QVNPTl9VTlNQRUNJRklFRBAAEhkKFVJFU0VUX1JFQVNPTl9QT1dFUl9PThAB",
            "EhkKFVJFU0VUX1JFQVNPTl9TT0ZUV0FSRRACEhoKFlJFU0VUX1JFQVNPTl9C",
            "Uk9XTl9PVVQQAxIdChlSRVNFVF9SRUFTT05fRVhURVJOQUxfUElOEAQSFgoS",
            "UkVTRVRfUkVBU09OX0ZBVUxUEAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NanopbReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Device.StatusCode), typeof(global::Device.SeverityLevel), typeof(global::Device.ErrorCode), typeof(global::Device.ResetReason), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.Header), global::Device.Header.Parser, new[]{ "DeviceId", "SequenceNumber", "TimestampMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.ResponseBase), global::Device.ResponseBase.Parser, new[]{ "Status", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.AlertInfo), global::Device.AlertInfo.Parser, new[]{ "Code", "Severity", "Description", "TimestampMs" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// General status codes for operation responses.
  /// See SRS-102.0, Rev 0, for more details.
  /// </summary>
  public enum StatusCode {
    [pbr::OriginalName("STATUS_OK")] StatusOk = 0,
    [pbr::OriginalName("STATUS_ERROR")] StatusError = 1,
    [pbr::OriginalName("STATUS_INVALID_PARAM")] StatusInvalidParam = 2,
    [pbr::OriginalName("STATUS_UNAUTHORIZED")] StatusUnauthorized = 3,
    [pbr::OriginalName("STATUS_UNAVAILABLE")] StatusUnavailable = 4,
    [pbr::OriginalName("STATUS_BUSY")] StatusBusy = 5,
    [pbr::OriginalName("STATUS_TIMEOUT")] StatusTimeout = 6,
  }

  /// <summary>
  /// Severity levels for alerts and logged errors.
  /// See SRS-102.0, Rev 0, for more details.
  /// </summary>
  public enum SeverityLevel {
    [pbr::OriginalName("SEVERITY_INFO")] SeverityInfo = 0,
    [pbr::OriginalName("SEVERITY_WARNING")] SeverityWarning = 1,
    [pbr::OriginalName("SEVERITY_ERROR")] SeverityError = 2,
    [pbr::OriginalName("SEVERITY_CRITICAL")] SeverityCritical = 3,
  }

  /// <summary>
  /// Specific error codes reported by the DAU.
  /// See SRS-102.0, Rev 0, for more details.
  /// </summary>
  public enum ErrorCode {
    /// <summary>
    /// Default (SEVERITY_INFO)
    /// </summary>
    [pbr::OriginalName("NO_ERROR")] NoError = 0,
    /// <summary>
    /// --- Health Errors (1xx) ---
    /// </summary>
    [pbr::OriginalName("HEALTH_TEMP_WARNING")] HealthTempWarning = 101,
    [pbr::OriginalName("HEALTH_TEMP_CRITICAL")] HealthTempCritical = 102,
    [pbr::OriginalName("HEALTH_MEM_WARN")] HealthMemWarn = 103,
    [pbr::OriginalName("HEALTH_MEM_ERROR")] HealthMemError = 104,
    [pbr::OriginalName("HEALTH_CPU_WARN")] HealthCpuWarn = 105,
    [pbr::OriginalName("HEALTH_CPU_ERROR")] HealthCpuError = 106,
    /// <summary>
    /// --- Firmware Errors (2xx) ---
    /// </summary>
    [pbr::OriginalName("FW_UPDATE_INFO_INITIATED")] FwUpdateInfoInitiated = 201,
    [pbr::OriginalName("FW_UPDATE_VERIFY_FAILED")] FwUpdateVerifyFailed = 202,
    [pbr::OriginalName("FW_UPDATE_STORAGE_ERROR")] FwUpdateStorageError = 203,
    [pbr::OriginalName("FW_CORRUPTION_DETECTED")] FwCorruptionDetected = 204,
    [pbr::OriginalName("FW_UPDATE_INCOMPLETE")] FwUpdateIncomplete = 205,
    [pbr::OriginalName("FW_UPDATE_INFO_COMPLETED")] FwUpdateInfoCompleted = 206,
    /// <summary>
    /// --- Data Errors (3xx) ---
    /// </summary>
    [pbr::OriginalName("DATA_BUFFER_NEAR_CAPACITY")] DataBufferNearCapacity = 301,
    [pbr::OriginalName("DATA_BUFFER_OVERWRITE")] DataBufferOverwrite = 302,
    [pbr::OriginalName("DATA_QUALITY_DEGRADED")] DataQualityDegraded = 303,
    [pbr::OriginalName("DATA_TRANSMISSION_FAILURE")] DataTransmissionFailure = 304,
    /// <summary>
    /// Info that config changed
    /// </summary>
    [pbr::OriginalName("DATA_CONFIG_UPDATED")] DataConfigUpdated = 305,
    /// <summary>
    /// --- Calibration Errors (4xx) ---
    /// </summary>
    [pbr::OriginalName("CAL_PARAM_OUT_OF_RANGE")] CalParamOutOfRange = 401,
    [pbr::OriginalName("CAL_PROCEDURE_FAILED")] CalProcedureFailed = 402,
    [pbr::OriginalName("CAL_INFO_COMPLETED")] CalInfoCompleted = 403,
    [pbr::OriginalName("CAL_EXPIRY_WARNING")] CalExpiryWarning = 404,
    /// <summary>
    /// --- Device/System Errors (5xx) ---
    /// </summary>
    [pbr::OriginalName("DEVICE_INFO_INITIALIZED")] DeviceInfoInitialized = 501,
    [pbr::OriginalName("DEVICE_INFO_RESET")] DeviceInfoReset = 502,
    [pbr::OriginalName("DEVICE_ERR_UNEXPECTED_RESET")] DeviceErrUnexpectedReset = 503,
    [pbr::OriginalName("DEVICE_ERR_SECURE_BOOT_FAILED")] DeviceErrSecureBootFailed = 504,
    [pbr::OriginalName("DEVICE_ERR_COMPONENT_FAILURE")] DeviceErrComponentFailure = 505,
    /// <summary>
    /// PTP sync lost or unavailable. Perhaps a critical error if sync lost during data capture.
    /// </summary>
    [pbr::OriginalName("DEVICE_WARN_CLOCK_SYNC")] DeviceWarnClockSync = 506,
    [pbr::OriginalName("DEVICE_FAULT_HARDWARE")] DeviceFaultHardware = 507,
    [pbr::OriginalName("DEVICE_FAULT_STORAGE_LIMIT")] DeviceFaultStorageLimit = 508,
    [pbr::OriginalName("DEVICE_WARN_COMM_TIMEOUT")] DeviceWarnCommTimeout = 509,
    [pbr::OriginalName("DEVICE_ERR_COMM_LINK_FAILURE")] DeviceErrCommLinkFailure = 510,
    [pbr::OriginalName("DEVICE_WARN_INVALID_COMMAND")] DeviceWarnInvalidCommand = 511,
    [pbr::OriginalName("DEVICE_ERR_AUTH_FAILURE")] DeviceErrAuthFailure = 512,
    [pbr::OriginalName("DEVICE_INFO_CONN_ESTABLISHED")] DeviceInfoConnEstablished = 513,
    [pbr::OriginalName("DEVICE_INFO_CONN_TERMINATED")] DeviceInfoConnTerminated = 514,
  }

  /// <summary>
  /// Reasons for the last device reset event
  /// </summary>
  public enum ResetReason {
    /// <summary>
    /// Reason unknown or not recorded
    /// </summary>
    [pbr::OriginalName("RESET_REASON_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("RESET_REASON_POWER_ON")] PowerOn = 1,
    [pbr::OriginalName("RESET_REASON_SOFTWARE")] Software = 2,
    [pbr::OriginalName("RESET_REASON_BROWN_OUT")] BrownOut = 3,
    [pbr::OriginalName("RESET_REASON_EXTERNAL_PIN")] ExternalPin = 4,
    [pbr::OriginalName("RESET_REASON_FAULT")] Fault = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Header included in every Main message
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Header : pb::IMessage<Header>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Header(Header other) : this() {
      deviceId_ = other.deviceId_;
      sequenceNumber_ = other.sequenceNumber_;
      timestampMs_ = other.timestampMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private string deviceId_ = "";
    /// <summary>
    /// Unique identifier for the device.
    /// TODO: Decide final type (string/bytes).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private uint sequenceNumber_;
    /// <summary>
    /// Sequence number for correlating requests/responses/ACKs.
    /// Sender increments for new requests/alerts. Receiver echoes in response/ACK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 3;
    private ulong timestampMs_;
    /// <summary>
    /// Timestamp when the message was originated by the sender.
    /// **NOTE**: This is NOT the PTP time, so coarseness in resolution and time deviation (hundreds of ms) ok.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (TimestampMs != other.TimestampMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (SequenceNumber != 0) hash ^= SequenceNumber.GetHashCode();
      if (TimestampMs != 0UL) hash ^= TimestampMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (SequenceNumber != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SequenceNumber);
      }
      if (TimestampMs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimestampMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (SequenceNumber != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SequenceNumber);
      }
      if (TimestampMs != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TimestampMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (SequenceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SequenceNumber);
      }
      if (TimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.SequenceNumber != 0) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.TimestampMs != 0UL) {
        TimestampMs = other.TimestampMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt32();
            break;
          }
          case 24: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt32();
            break;
          }
          case 24: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Basic response fields included in many specific operation responses
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ResponseBase : pb::IMessage<ResponseBase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResponseBase> _parser = new pb::MessageParser<ResponseBase>(() => new ResponseBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResponseBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseBase(ResponseBase other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseBase Clone() {
      return new ResponseBase(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Device.StatusCode status_ = global::Device.StatusCode.StatusOk;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.StatusCode Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// Typically empty, may remove this completely
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResponseBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResponseBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Device.StatusCode.StatusOk) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != global::Device.StatusCode.StatusOk) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != global::Device.StatusCode.StatusOk) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::Device.StatusCode.StatusOk) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResponseBase other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Device.StatusCode.StatusOk) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Device.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = (global::Device.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Structure for reporting an alert or logged error condition
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AlertInfo : pb::IMessage<AlertInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlertInfo> _parser = new pb::MessageParser<AlertInfo>(() => new AlertInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AlertInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlertInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlertInfo(AlertInfo other) : this() {
      code_ = other.code_;
      severity_ = other.severity_;
      description_ = other.description_;
      timestampMs_ = other.timestampMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlertInfo Clone() {
      return new AlertInfo(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Device.ErrorCode code_ = global::Device.ErrorCode.NoError;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ErrorCode Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 2;
    private global::Device.SeverityLevel severity_ = global::Device.SeverityLevel.SeverityInfo;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.SeverityLevel Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp_ms" field.</summary>
    public const int TimestampMsFieldNumber = 4;
    private ulong timestampMs_;
    /// <summary>
    /// When the error occurred
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TimestampMs {
      get { return timestampMs_; }
      set {
        timestampMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AlertInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AlertInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Severity != other.Severity) return false;
      if (Description != other.Description) return false;
      if (TimestampMs != other.TimestampMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != global::Device.ErrorCode.NoError) hash ^= Code.GetHashCode();
      if (Severity != global::Device.SeverityLevel.SeverityInfo) hash ^= Severity.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (TimestampMs != 0UL) hash ^= TimestampMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != global::Device.ErrorCode.NoError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Severity != global::Device.SeverityLevel.SeverityInfo) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Severity);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (TimestampMs != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(TimestampMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != global::Device.ErrorCode.NoError) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Severity != global::Device.SeverityLevel.SeverityInfo) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Severity);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (TimestampMs != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(TimestampMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Code != global::Device.ErrorCode.NoError) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Severity != global::Device.SeverityLevel.SeverityInfo) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (TimestampMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TimestampMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AlertInfo other) {
      if (other == null) {
        return;
      }
      if (other.Code != global::Device.ErrorCode.NoError) {
        Code = other.Code;
      }
      if (other.Severity != global::Device.SeverityLevel.SeverityInfo) {
        Severity = other.Severity;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.TimestampMs != 0UL) {
        TimestampMs = other.TimestampMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Device.ErrorCode) input.ReadEnum();
            break;
          }
          case 16: {
            Severity = (global::Device.SeverityLevel) input.ReadEnum();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = (global::Device.ErrorCode) input.ReadEnum();
            break;
          }
          case 16: {
            Severity = (global::Device.SeverityLevel) input.ReadEnum();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            TimestampMs = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
