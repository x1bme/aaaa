// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: main.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Device {

  /// <summary>Holder for reflection information generated from main.proto</summary>
  public static partial class MainReflection {

    #region Descriptor
    /// <summary>File descriptor for main.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MainReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgptYWluLnByb3RvEgZkZXZpY2UaDGNvbW1vbi5wcm90bxoMaGVhbHRoLnBy",
            "b3RvGg5maXJtd2FyZS5wcm90bxoKZGF0YS5wcm90bxoRY2FsaWJyYXRpb24u",
            "cHJvdG8aDGRldmljZS5wcm90byKlBgoETWFpbhIeCgZoZWFkZXIYASABKAsy",
            "Di5kZXZpY2UuSGVhZGVyEi8KDmhlYWx0aF9yZXF1ZXN0GAogASgLMhUuZGV2",
            "aWNlLkhlYWx0aFJlcXVlc3RIABIxCg9oZWFsdGhfcmVzcG9uc2UYCyABKAsy",
            "Fi5kZXZpY2UuSGVhbHRoUmVzcG9uc2VIABIzChBmaXJtd2FyZV9yZXF1ZXN0",
            "GBQgASgLMhcuZGV2aWNlLkZpcm13YXJlUmVxdWVzdEgAEjUKEWZpcm13YXJl",
            "X3Jlc3BvbnNlGBUgASgLMhguZGV2aWNlLkZpcm13YXJlUmVzcG9uc2VIABIr",
            "CgxkYXRhX3JlcXVlc3QYHiABKAsyEy5kZXZpY2UuRGF0YVJlcXVlc3RIABIt",
            "Cg1kYXRhX3Jlc3BvbnNlGB8gASgLMhQuZGV2aWNlLkRhdGFSZXNwb25zZUgA",
            "EjgKE2V2ZW50X3RyaWdnZXJfYWxlcnQYICABKAsyGS5kZXZpY2UuRXZlbnRU",
            "cmlnZ2VyQWxlcnRIABJJChxldmVudF90cmlnZ2VyX2FsZXJ0X3Jlc3BvbnNl",
            "GCEgASgLMiEuZGV2aWNlLkV2ZW50VHJpZ2dlckFsZXJ0UmVzcG9uc2VIABI5",
            "ChNjYWxpYnJhdGlvbl9yZXF1ZXN0GCggASgLMhouZGV2aWNlLkNhbGlicmF0",
            "aW9uUmVxdWVzdEgAEjsKFGNhbGlicmF0aW9uX3Jlc3BvbnNlGCkgASgLMhsu",
            "ZGV2aWNlLkNhbGlicmF0aW9uUmVzcG9uc2VIABIvCg5kZXZpY2VfcmVxdWVz",
            "dBgyIAEoCzIVLmRldmljZS5EZXZpY2VSZXF1ZXN0SAASMQoPZGV2aWNlX3Jl",
            "c3BvbnNlGDMgASgLMhYuZGV2aWNlLkRldmljZVJlc3BvbnNlSAASKQoLZXJy",
            "b3JfYWxlcnQYNCABKAsyEi5kZXZpY2UuRXJyb3JBbGVydEgAEjoKFGVycm9y",
            "X2FsZXJ0X3Jlc3BvbnNlGDUgASgLMhouZGV2aWNlLkVycm9yQWxlcnRSZXNw",
            "b25zZUgAQgkKB3BheWxvYWRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Device.CommonReflection.Descriptor, global::Device.HealthReflection.Descriptor, global::Device.FirmwareReflection.Descriptor, global::Device.DataReflection.Descriptor, global::Device.CalibrationReflection.Descriptor, global::Device.DeviceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.Main), global::Device.Main.Parser, new[]{ "Header", "HealthRequest", "HealthResponse", "FirmwareRequest", "FirmwareResponse", "DataRequest", "DataResponse", "EventTriggerAlert", "EventTriggerAlertResponse", "CalibrationRequest", "CalibrationResponse", "DeviceRequest", "DeviceResponse", "ErrorAlert", "ErrorAlertResponse" }, new[]{ "Payload" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The single message type transmitted over the wire.
  /// Calling it Main could lead to some naming issues in 
  /// application code since application code usually 
  /// references a main/Main procedure, so this may be changed to 
  /// MainMessage or Envelope later to avoid that
  /// issue. Right now, I'm just going to keep it as Main.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Main : pb::IMessage<Main>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Main> _parser = new pb::MessageParser<Main>(() => new Main());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Main> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.MainReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Main() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Main(Main other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      switch (other.PayloadCase) {
        case PayloadOneofCase.HealthRequest:
          HealthRequest = other.HealthRequest.Clone();
          break;
        case PayloadOneofCase.HealthResponse:
          HealthResponse = other.HealthResponse.Clone();
          break;
        case PayloadOneofCase.FirmwareRequest:
          FirmwareRequest = other.FirmwareRequest.Clone();
          break;
        case PayloadOneofCase.FirmwareResponse:
          FirmwareResponse = other.FirmwareResponse.Clone();
          break;
        case PayloadOneofCase.DataRequest:
          DataRequest = other.DataRequest.Clone();
          break;
        case PayloadOneofCase.DataResponse:
          DataResponse = other.DataResponse.Clone();
          break;
        case PayloadOneofCase.EventTriggerAlert:
          EventTriggerAlert = other.EventTriggerAlert.Clone();
          break;
        case PayloadOneofCase.EventTriggerAlertResponse:
          EventTriggerAlertResponse = other.EventTriggerAlertResponse.Clone();
          break;
        case PayloadOneofCase.CalibrationRequest:
          CalibrationRequest = other.CalibrationRequest.Clone();
          break;
        case PayloadOneofCase.CalibrationResponse:
          CalibrationResponse = other.CalibrationResponse.Clone();
          break;
        case PayloadOneofCase.DeviceRequest:
          DeviceRequest = other.DeviceRequest.Clone();
          break;
        case PayloadOneofCase.DeviceResponse:
          DeviceResponse = other.DeviceResponse.Clone();
          break;
        case PayloadOneofCase.ErrorAlert:
          ErrorAlert = other.ErrorAlert.Clone();
          break;
        case PayloadOneofCase.ErrorAlertResponse:
          ErrorAlertResponse = other.ErrorAlertResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Main Clone() {
      return new Main(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Device.Header header_;
    /// <summary>
    /// Standard header present in every message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "health_request" field.</summary>
    public const int HealthRequestFieldNumber = 10;
    /// <summary>
    /// --- Health Category (Fields 10-19) ---
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.HealthRequest HealthRequest {
      get { return payloadCase_ == PayloadOneofCase.HealthRequest ? (global::Device.HealthRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.HealthRequest;
      }
    }

    /// <summary>Field number for the "health_response" field.</summary>
    public const int HealthResponseFieldNumber = 11;
    /// <summary>
    /// Device -> Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.HealthResponse HealthResponse {
      get { return payloadCase_ == PayloadOneofCase.HealthResponse ? (global::Device.HealthResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.HealthResponse;
      }
    }

    /// <summary>Field number for the "firmware_request" field.</summary>
    public const int FirmwareRequestFieldNumber = 20;
    /// <summary>
    /// --- Firmware Category (Fields 20-29) ---
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareRequest FirmwareRequest {
      get { return payloadCase_ == PayloadOneofCase.FirmwareRequest ? (global::Device.FirmwareRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.FirmwareRequest;
      }
    }

    /// <summary>Field number for the "firmware_response" field.</summary>
    public const int FirmwareResponseFieldNumber = 21;
    /// <summary>
    /// Device -> Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareResponse FirmwareResponse {
      get { return payloadCase_ == PayloadOneofCase.FirmwareResponse ? (global::Device.FirmwareResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.FirmwareResponse;
      }
    }

    /// <summary>Field number for the "data_request" field.</summary>
    public const int DataRequestFieldNumber = 30;
    /// <summary>
    /// --- Data Category (Fields 30-39) ---
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.DataRequest DataRequest {
      get { return payloadCase_ == PayloadOneofCase.DataRequest ? (global::Device.DataRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DataRequest;
      }
    }

    /// <summary>Field number for the "data_response" field.</summary>
    public const int DataResponseFieldNumber = 31;
    /// <summary>
    /// Device -> Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.DataResponse DataResponse {
      get { return payloadCase_ == PayloadOneofCase.DataResponse ? (global::Device.DataResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DataResponse;
      }
    }

    /// <summary>Field number for the "event_trigger_alert" field.</summary>
    public const int EventTriggerAlertFieldNumber = 32;
    /// <summary>
    /// Device -> Server (***Alert***)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.EventTriggerAlert EventTriggerAlert {
      get { return payloadCase_ == PayloadOneofCase.EventTriggerAlert ? (global::Device.EventTriggerAlert) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.EventTriggerAlert;
      }
    }

    /// <summary>Field number for the "event_trigger_alert_response" field.</summary>
    public const int EventTriggerAlertResponseFieldNumber = 33;
    /// <summary>
    /// Server -> Device (Alert ACK)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.EventTriggerAlertResponse EventTriggerAlertResponse {
      get { return payloadCase_ == PayloadOneofCase.EventTriggerAlertResponse ? (global::Device.EventTriggerAlertResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.EventTriggerAlertResponse;
      }
    }

    /// <summary>Field number for the "calibration_request" field.</summary>
    public const int CalibrationRequestFieldNumber = 40;
    /// <summary>
    /// --- Calibration Category (Fields 40-49) ---
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.CalibrationRequest CalibrationRequest {
      get { return payloadCase_ == PayloadOneofCase.CalibrationRequest ? (global::Device.CalibrationRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CalibrationRequest;
      }
    }

    /// <summary>Field number for the "calibration_response" field.</summary>
    public const int CalibrationResponseFieldNumber = 41;
    /// <summary>
    /// Device -> Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.CalibrationResponse CalibrationResponse {
      get { return payloadCase_ == PayloadOneofCase.CalibrationResponse ? (global::Device.CalibrationResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CalibrationResponse;
      }
    }

    /// <summary>Field number for the "device_request" field.</summary>
    public const int DeviceRequestFieldNumber = 50;
    /// <summary>
    /// --- Device Management Category (Fields 50-59) ---
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.DeviceRequest DeviceRequest {
      get { return payloadCase_ == PayloadOneofCase.DeviceRequest ? (global::Device.DeviceRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DeviceRequest;
      }
    }

    /// <summary>Field number for the "device_response" field.</summary>
    public const int DeviceResponseFieldNumber = 51;
    /// <summary>
    /// Device -> Server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.DeviceResponse DeviceResponse {
      get { return payloadCase_ == PayloadOneofCase.DeviceResponse ? (global::Device.DeviceResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DeviceResponse;
      }
    }

    /// <summary>Field number for the "error_alert" field.</summary>
    public const int ErrorAlertFieldNumber = 52;
    /// <summary>
    /// Device -> Server (***Alert***)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ErrorAlert ErrorAlert {
      get { return payloadCase_ == PayloadOneofCase.ErrorAlert ? (global::Device.ErrorAlert) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ErrorAlert;
      }
    }

    /// <summary>Field number for the "error_alert_response" field.</summary>
    public const int ErrorAlertResponseFieldNumber = 53;
    /// <summary>
    /// Server -> Device (Alert Ack)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ErrorAlertResponse ErrorAlertResponse {
      get { return payloadCase_ == PayloadOneofCase.ErrorAlertResponse ? (global::Device.ErrorAlertResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ErrorAlertResponse;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      HealthRequest = 10,
      HealthResponse = 11,
      FirmwareRequest = 20,
      FirmwareResponse = 21,
      DataRequest = 30,
      DataResponse = 31,
      EventTriggerAlert = 32,
      EventTriggerAlertResponse = 33,
      CalibrationRequest = 40,
      CalibrationResponse = 41,
      DeviceRequest = 50,
      DeviceResponse = 51,
      ErrorAlert = 52,
      ErrorAlertResponse = 53,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Main);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Main other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(HealthRequest, other.HealthRequest)) return false;
      if (!object.Equals(HealthResponse, other.HealthResponse)) return false;
      if (!object.Equals(FirmwareRequest, other.FirmwareRequest)) return false;
      if (!object.Equals(FirmwareResponse, other.FirmwareResponse)) return false;
      if (!object.Equals(DataRequest, other.DataRequest)) return false;
      if (!object.Equals(DataResponse, other.DataResponse)) return false;
      if (!object.Equals(EventTriggerAlert, other.EventTriggerAlert)) return false;
      if (!object.Equals(EventTriggerAlertResponse, other.EventTriggerAlertResponse)) return false;
      if (!object.Equals(CalibrationRequest, other.CalibrationRequest)) return false;
      if (!object.Equals(CalibrationResponse, other.CalibrationResponse)) return false;
      if (!object.Equals(DeviceRequest, other.DeviceRequest)) return false;
      if (!object.Equals(DeviceResponse, other.DeviceResponse)) return false;
      if (!object.Equals(ErrorAlert, other.ErrorAlert)) return false;
      if (!object.Equals(ErrorAlertResponse, other.ErrorAlertResponse)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.HealthRequest) hash ^= HealthRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.HealthResponse) hash ^= HealthResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.FirmwareRequest) hash ^= FirmwareRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.FirmwareResponse) hash ^= FirmwareResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DataRequest) hash ^= DataRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DataResponse) hash ^= DataResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlert) hash ^= EventTriggerAlert.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlertResponse) hash ^= EventTriggerAlertResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.CalibrationRequest) hash ^= CalibrationRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.CalibrationResponse) hash ^= CalibrationResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DeviceRequest) hash ^= DeviceRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DeviceResponse) hash ^= DeviceResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ErrorAlert) hash ^= ErrorAlert.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ErrorAlertResponse) hash ^= ErrorAlertResponse.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (payloadCase_ == PayloadOneofCase.HealthRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(HealthRequest);
      }
      if (payloadCase_ == PayloadOneofCase.HealthResponse) {
        output.WriteRawTag(90);
        output.WriteMessage(HealthResponse);
      }
      if (payloadCase_ == PayloadOneofCase.FirmwareRequest) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(FirmwareRequest);
      }
      if (payloadCase_ == PayloadOneofCase.FirmwareResponse) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(FirmwareResponse);
      }
      if (payloadCase_ == PayloadOneofCase.DataRequest) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(DataRequest);
      }
      if (payloadCase_ == PayloadOneofCase.DataResponse) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DataResponse);
      }
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlert) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(EventTriggerAlert);
      }
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlertResponse) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(EventTriggerAlertResponse);
      }
      if (payloadCase_ == PayloadOneofCase.CalibrationRequest) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(CalibrationRequest);
      }
      if (payloadCase_ == PayloadOneofCase.CalibrationResponse) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(CalibrationResponse);
      }
      if (payloadCase_ == PayloadOneofCase.DeviceRequest) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(DeviceRequest);
      }
      if (payloadCase_ == PayloadOneofCase.DeviceResponse) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(DeviceResponse);
      }
      if (payloadCase_ == PayloadOneofCase.ErrorAlert) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(ErrorAlert);
      }
      if (payloadCase_ == PayloadOneofCase.ErrorAlertResponse) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(ErrorAlertResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (payloadCase_ == PayloadOneofCase.HealthRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(HealthRequest);
      }
      if (payloadCase_ == PayloadOneofCase.HealthResponse) {
        output.WriteRawTag(90);
        output.WriteMessage(HealthResponse);
      }
      if (payloadCase_ == PayloadOneofCase.FirmwareRequest) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(FirmwareRequest);
      }
      if (payloadCase_ == PayloadOneofCase.FirmwareResponse) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(FirmwareResponse);
      }
      if (payloadCase_ == PayloadOneofCase.DataRequest) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(DataRequest);
      }
      if (payloadCase_ == PayloadOneofCase.DataResponse) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DataResponse);
      }
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlert) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(EventTriggerAlert);
      }
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlertResponse) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(EventTriggerAlertResponse);
      }
      if (payloadCase_ == PayloadOneofCase.CalibrationRequest) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(CalibrationRequest);
      }
      if (payloadCase_ == PayloadOneofCase.CalibrationResponse) {
        output.WriteRawTag(202, 2);
        output.WriteMessage(CalibrationResponse);
      }
      if (payloadCase_ == PayloadOneofCase.DeviceRequest) {
        output.WriteRawTag(146, 3);
        output.WriteMessage(DeviceRequest);
      }
      if (payloadCase_ == PayloadOneofCase.DeviceResponse) {
        output.WriteRawTag(154, 3);
        output.WriteMessage(DeviceResponse);
      }
      if (payloadCase_ == PayloadOneofCase.ErrorAlert) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(ErrorAlert);
      }
      if (payloadCase_ == PayloadOneofCase.ErrorAlertResponse) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(ErrorAlertResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (payloadCase_ == PayloadOneofCase.HealthRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HealthRequest);
      }
      if (payloadCase_ == PayloadOneofCase.HealthResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HealthResponse);
      }
      if (payloadCase_ == PayloadOneofCase.FirmwareRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FirmwareRequest);
      }
      if (payloadCase_ == PayloadOneofCase.FirmwareResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FirmwareResponse);
      }
      if (payloadCase_ == PayloadOneofCase.DataRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DataRequest);
      }
      if (payloadCase_ == PayloadOneofCase.DataResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DataResponse);
      }
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlert) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventTriggerAlert);
      }
      if (payloadCase_ == PayloadOneofCase.EventTriggerAlertResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EventTriggerAlertResponse);
      }
      if (payloadCase_ == PayloadOneofCase.CalibrationRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CalibrationRequest);
      }
      if (payloadCase_ == PayloadOneofCase.CalibrationResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CalibrationResponse);
      }
      if (payloadCase_ == PayloadOneofCase.DeviceRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeviceRequest);
      }
      if (payloadCase_ == PayloadOneofCase.DeviceResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DeviceResponse);
      }
      if (payloadCase_ == PayloadOneofCase.ErrorAlert) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ErrorAlert);
      }
      if (payloadCase_ == PayloadOneofCase.ErrorAlertResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ErrorAlertResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Main other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Device.Header();
        }
        Header.MergeFrom(other.Header);
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.HealthRequest:
          if (HealthRequest == null) {
            HealthRequest = new global::Device.HealthRequest();
          }
          HealthRequest.MergeFrom(other.HealthRequest);
          break;
        case PayloadOneofCase.HealthResponse:
          if (HealthResponse == null) {
            HealthResponse = new global::Device.HealthResponse();
          }
          HealthResponse.MergeFrom(other.HealthResponse);
          break;
        case PayloadOneofCase.FirmwareRequest:
          if (FirmwareRequest == null) {
            FirmwareRequest = new global::Device.FirmwareRequest();
          }
          FirmwareRequest.MergeFrom(other.FirmwareRequest);
          break;
        case PayloadOneofCase.FirmwareResponse:
          if (FirmwareResponse == null) {
            FirmwareResponse = new global::Device.FirmwareResponse();
          }
          FirmwareResponse.MergeFrom(other.FirmwareResponse);
          break;
        case PayloadOneofCase.DataRequest:
          if (DataRequest == null) {
            DataRequest = new global::Device.DataRequest();
          }
          DataRequest.MergeFrom(other.DataRequest);
          break;
        case PayloadOneofCase.DataResponse:
          if (DataResponse == null) {
            DataResponse = new global::Device.DataResponse();
          }
          DataResponse.MergeFrom(other.DataResponse);
          break;
        case PayloadOneofCase.EventTriggerAlert:
          if (EventTriggerAlert == null) {
            EventTriggerAlert = new global::Device.EventTriggerAlert();
          }
          EventTriggerAlert.MergeFrom(other.EventTriggerAlert);
          break;
        case PayloadOneofCase.EventTriggerAlertResponse:
          if (EventTriggerAlertResponse == null) {
            EventTriggerAlertResponse = new global::Device.EventTriggerAlertResponse();
          }
          EventTriggerAlertResponse.MergeFrom(other.EventTriggerAlertResponse);
          break;
        case PayloadOneofCase.CalibrationRequest:
          if (CalibrationRequest == null) {
            CalibrationRequest = new global::Device.CalibrationRequest();
          }
          CalibrationRequest.MergeFrom(other.CalibrationRequest);
          break;
        case PayloadOneofCase.CalibrationResponse:
          if (CalibrationResponse == null) {
            CalibrationResponse = new global::Device.CalibrationResponse();
          }
          CalibrationResponse.MergeFrom(other.CalibrationResponse);
          break;
        case PayloadOneofCase.DeviceRequest:
          if (DeviceRequest == null) {
            DeviceRequest = new global::Device.DeviceRequest();
          }
          DeviceRequest.MergeFrom(other.DeviceRequest);
          break;
        case PayloadOneofCase.DeviceResponse:
          if (DeviceResponse == null) {
            DeviceResponse = new global::Device.DeviceResponse();
          }
          DeviceResponse.MergeFrom(other.DeviceResponse);
          break;
        case PayloadOneofCase.ErrorAlert:
          if (ErrorAlert == null) {
            ErrorAlert = new global::Device.ErrorAlert();
          }
          ErrorAlert.MergeFrom(other.ErrorAlert);
          break;
        case PayloadOneofCase.ErrorAlertResponse:
          if (ErrorAlertResponse == null) {
            ErrorAlertResponse = new global::Device.ErrorAlertResponse();
          }
          ErrorAlertResponse.MergeFrom(other.ErrorAlertResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Device.Header();
            }
            input.ReadMessage(Header);
            break;
          }
          case 82: {
            global::Device.HealthRequest subBuilder = new global::Device.HealthRequest();
            if (payloadCase_ == PayloadOneofCase.HealthRequest) {
              subBuilder.MergeFrom(HealthRequest);
            }
            input.ReadMessage(subBuilder);
            HealthRequest = subBuilder;
            break;
          }
          case 90: {
            global::Device.HealthResponse subBuilder = new global::Device.HealthResponse();
            if (payloadCase_ == PayloadOneofCase.HealthResponse) {
              subBuilder.MergeFrom(HealthResponse);
            }
            input.ReadMessage(subBuilder);
            HealthResponse = subBuilder;
            break;
          }
          case 162: {
            global::Device.FirmwareRequest subBuilder = new global::Device.FirmwareRequest();
            if (payloadCase_ == PayloadOneofCase.FirmwareRequest) {
              subBuilder.MergeFrom(FirmwareRequest);
            }
            input.ReadMessage(subBuilder);
            FirmwareRequest = subBuilder;
            break;
          }
          case 170: {
            global::Device.FirmwareResponse subBuilder = new global::Device.FirmwareResponse();
            if (payloadCase_ == PayloadOneofCase.FirmwareResponse) {
              subBuilder.MergeFrom(FirmwareResponse);
            }
            input.ReadMessage(subBuilder);
            FirmwareResponse = subBuilder;
            break;
          }
          case 242: {
            global::Device.DataRequest subBuilder = new global::Device.DataRequest();
            if (payloadCase_ == PayloadOneofCase.DataRequest) {
              subBuilder.MergeFrom(DataRequest);
            }
            input.ReadMessage(subBuilder);
            DataRequest = subBuilder;
            break;
          }
          case 250: {
            global::Device.DataResponse subBuilder = new global::Device.DataResponse();
            if (payloadCase_ == PayloadOneofCase.DataResponse) {
              subBuilder.MergeFrom(DataResponse);
            }
            input.ReadMessage(subBuilder);
            DataResponse = subBuilder;
            break;
          }
          case 258: {
            global::Device.EventTriggerAlert subBuilder = new global::Device.EventTriggerAlert();
            if (payloadCase_ == PayloadOneofCase.EventTriggerAlert) {
              subBuilder.MergeFrom(EventTriggerAlert);
            }
            input.ReadMessage(subBuilder);
            EventTriggerAlert = subBuilder;
            break;
          }
          case 266: {
            global::Device.EventTriggerAlertResponse subBuilder = new global::Device.EventTriggerAlertResponse();
            if (payloadCase_ == PayloadOneofCase.EventTriggerAlertResponse) {
              subBuilder.MergeFrom(EventTriggerAlertResponse);
            }
            input.ReadMessage(subBuilder);
            EventTriggerAlertResponse = subBuilder;
            break;
          }
          case 322: {
            global::Device.CalibrationRequest subBuilder = new global::Device.CalibrationRequest();
            if (payloadCase_ == PayloadOneofCase.CalibrationRequest) {
              subBuilder.MergeFrom(CalibrationRequest);
            }
            input.ReadMessage(subBuilder);
            CalibrationRequest = subBuilder;
            break;
          }
          case 330: {
            global::Device.CalibrationResponse subBuilder = new global::Device.CalibrationResponse();
            if (payloadCase_ == PayloadOneofCase.CalibrationResponse) {
              subBuilder.MergeFrom(CalibrationResponse);
            }
            input.ReadMessage(subBuilder);
            CalibrationResponse = subBuilder;
            break;
          }
          case 402: {
            global::Device.DeviceRequest subBuilder = new global::Device.DeviceRequest();
            if (payloadCase_ == PayloadOneofCase.DeviceRequest) {
              subBuilder.MergeFrom(DeviceRequest);
            }
            input.ReadMessage(subBuilder);
            DeviceRequest = subBuilder;
            break;
          }
          case 410: {
            global::Device.DeviceResponse subBuilder = new global::Device.DeviceResponse();
            if (payloadCase_ == PayloadOneofCase.DeviceResponse) {
              subBuilder.MergeFrom(DeviceResponse);
            }
            input.ReadMessage(subBuilder);
            DeviceResponse = subBuilder;
            break;
          }
          case 418: {
            global::Device.ErrorAlert subBuilder = new global::Device.ErrorAlert();
            if (payloadCase_ == PayloadOneofCase.ErrorAlert) {
              subBuilder.MergeFrom(ErrorAlert);
            }
            input.ReadMessage(subBuilder);
            ErrorAlert = subBuilder;
            break;
          }
          case 426: {
            global::Device.ErrorAlertResponse subBuilder = new global::Device.ErrorAlertResponse();
            if (payloadCase_ == PayloadOneofCase.ErrorAlertResponse) {
              subBuilder.MergeFrom(ErrorAlertResponse);
            }
            input.ReadMessage(subBuilder);
            ErrorAlertResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Device.Header();
            }
            input.ReadMessage(Header);
            break;
          }
          case 82: {
            global::Device.HealthRequest subBuilder = new global::Device.HealthRequest();
            if (payloadCase_ == PayloadOneofCase.HealthRequest) {
              subBuilder.MergeFrom(HealthRequest);
            }
            input.ReadMessage(subBuilder);
            HealthRequest = subBuilder;
            break;
          }
          case 90: {
            global::Device.HealthResponse subBuilder = new global::Device.HealthResponse();
            if (payloadCase_ == PayloadOneofCase.HealthResponse) {
              subBuilder.MergeFrom(HealthResponse);
            }
            input.ReadMessage(subBuilder);
            HealthResponse = subBuilder;
            break;
          }
          case 162: {
            global::Device.FirmwareRequest subBuilder = new global::Device.FirmwareRequest();
            if (payloadCase_ == PayloadOneofCase.FirmwareRequest) {
              subBuilder.MergeFrom(FirmwareRequest);
            }
            input.ReadMessage(subBuilder);
            FirmwareRequest = subBuilder;
            break;
          }
          case 170: {
            global::Device.FirmwareResponse subBuilder = new global::Device.FirmwareResponse();
            if (payloadCase_ == PayloadOneofCase.FirmwareResponse) {
              subBuilder.MergeFrom(FirmwareResponse);
            }
            input.ReadMessage(subBuilder);
            FirmwareResponse = subBuilder;
            break;
          }
          case 242: {
            global::Device.DataRequest subBuilder = new global::Device.DataRequest();
            if (payloadCase_ == PayloadOneofCase.DataRequest) {
              subBuilder.MergeFrom(DataRequest);
            }
            input.ReadMessage(subBuilder);
            DataRequest = subBuilder;
            break;
          }
          case 250: {
            global::Device.DataResponse subBuilder = new global::Device.DataResponse();
            if (payloadCase_ == PayloadOneofCase.DataResponse) {
              subBuilder.MergeFrom(DataResponse);
            }
            input.ReadMessage(subBuilder);
            DataResponse = subBuilder;
            break;
          }
          case 258: {
            global::Device.EventTriggerAlert subBuilder = new global::Device.EventTriggerAlert();
            if (payloadCase_ == PayloadOneofCase.EventTriggerAlert) {
              subBuilder.MergeFrom(EventTriggerAlert);
            }
            input.ReadMessage(subBuilder);
            EventTriggerAlert = subBuilder;
            break;
          }
          case 266: {
            global::Device.EventTriggerAlertResponse subBuilder = new global::Device.EventTriggerAlertResponse();
            if (payloadCase_ == PayloadOneofCase.EventTriggerAlertResponse) {
              subBuilder.MergeFrom(EventTriggerAlertResponse);
            }
            input.ReadMessage(subBuilder);
            EventTriggerAlertResponse = subBuilder;
            break;
          }
          case 322: {
            global::Device.CalibrationRequest subBuilder = new global::Device.CalibrationRequest();
            if (payloadCase_ == PayloadOneofCase.CalibrationRequest) {
              subBuilder.MergeFrom(CalibrationRequest);
            }
            input.ReadMessage(subBuilder);
            CalibrationRequest = subBuilder;
            break;
          }
          case 330: {
            global::Device.CalibrationResponse subBuilder = new global::Device.CalibrationResponse();
            if (payloadCase_ == PayloadOneofCase.CalibrationResponse) {
              subBuilder.MergeFrom(CalibrationResponse);
            }
            input.ReadMessage(subBuilder);
            CalibrationResponse = subBuilder;
            break;
          }
          case 402: {
            global::Device.DeviceRequest subBuilder = new global::Device.DeviceRequest();
            if (payloadCase_ == PayloadOneofCase.DeviceRequest) {
              subBuilder.MergeFrom(DeviceRequest);
            }
            input.ReadMessage(subBuilder);
            DeviceRequest = subBuilder;
            break;
          }
          case 410: {
            global::Device.DeviceResponse subBuilder = new global::Device.DeviceResponse();
            if (payloadCase_ == PayloadOneofCase.DeviceResponse) {
              subBuilder.MergeFrom(DeviceResponse);
            }
            input.ReadMessage(subBuilder);
            DeviceResponse = subBuilder;
            break;
          }
          case 418: {
            global::Device.ErrorAlert subBuilder = new global::Device.ErrorAlert();
            if (payloadCase_ == PayloadOneofCase.ErrorAlert) {
              subBuilder.MergeFrom(ErrorAlert);
            }
            input.ReadMessage(subBuilder);
            ErrorAlert = subBuilder;
            break;
          }
          case 426: {
            global::Device.ErrorAlertResponse subBuilder = new global::Device.ErrorAlertResponse();
            if (payloadCase_ == PayloadOneofCase.ErrorAlertResponse) {
              subBuilder.MergeFrom(ErrorAlertResponse);
            }
            input.ReadMessage(subBuilder);
            ErrorAlertResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
