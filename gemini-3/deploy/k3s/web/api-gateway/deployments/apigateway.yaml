apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
  namespace: web
data:
  appsettings.Production.json: |
    {
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft.AspNetCore": "Warning"
        }
      },
      "AllowedHosts": "*"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: web
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: localhost:5000/apigateway:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "https://+:443;http://+:80"
        - name: ASPNETCORE_HTTPS_PORT
          value: "443"
        - name: ASPNETCORE_Kestrel__Certificates__Default__Path
          value: "/app/certs/tls.crt"
        - name: ASPNETCORE_Kestrel__Certificates__Default__KeyPath
          value: "/app/certs/tls.key"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: database
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: ConnectionStrings__DefaultConnection
          value: "Server=$(DB_HOST);Port=$(DB_PORT);Database=$(DB_NAME);User=$(DB_USER);Password=$(DB_PASSWORD);"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/appsettings.Production.json
          subPath: appsettings.Production.json
        - name: tls-cert
          mountPath: /app/certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: api-gateway-config
      - name: tls-cert
        secret:
          secretName: gemini-cert
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: web
spec:
  type: ClusterIP
  selector:
    app: api-gateway
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
