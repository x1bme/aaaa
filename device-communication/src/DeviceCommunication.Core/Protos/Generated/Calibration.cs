// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: calibration.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Device {

  /// <summary>Holder for reflection information generated from calibration.proto</summary>
  public static partial class CalibrationReflection {

    #region Descriptor
    /// <summary>File descriptor for calibration.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CalibrationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjYWxpYnJhdGlvbi5wcm90bxIGZGV2aWNlGgxuYW5vcGIucHJvdG8aDGNv",
            "bW1vbi5wcm90byKsAQobQWRjQ2hhbm5lbENhbGlicmF0aW9uUGFyYW1zEhIK",
            "CmNoYW5uZWxfaWQYASABKA0SDgoGb2Zmc2V0GAIgASgCEgwKBGdhaW4YAyAB",
            "KAISFwoPbGFzdF91cGRhdGVkX21zGAQgASgEEh4KFmNhbGlicmF0aW9uX2V4",
            "cGlyZXNfbXMYBSABKAQSIgoadGVtcGVyYXR1cmVfYXRfY2FsX2NlbHNpdXMY",
            "BiABKAIiOgocUmVhZENhbGlicmF0aW9uUGFyYW1zUmVxdWVzdBIaCgtjaGFu",
            "bmVsX2lkcxgBIAMoDUIFkj8CEAQijAEKHVJlYWRDYWxpYnJhdGlvblBhcmFt",
            "c1Jlc3BvbnNlEisKDXJlc3BvbnNlX2Jhc2UYASABKAsyFC5kZXZpY2UuUmVz",
            "cG9uc2VCYXNlEj4KCnBhcmFtZXRlcnMYAiADKAsyIy5kZXZpY2UuQWRjQ2hh",
            "bm5lbENhbGlicmF0aW9uUGFyYW1zQgWSPwIQBCJZCiBTdGFydENhbGlicmF0",
            "aW9uUHJvY2VkdXJlUmVxdWVzdBIaCgtjaGFubmVsX2lkcxgBIAMoDUIFkj8C",
            "EAQSGQoRZm9yY2VfY2FsaWJyYXRpb24YAiABKAgijwEKIVN0YXJ0Q2FsaWJy",
            "YXRpb25Qcm9jZWR1cmVSZXNwb25zZRIrCg1yZXNwb25zZV9iYXNlGAEgASgL",
            "MhQuZGV2aWNlLlJlc3BvbnNlQmFzZRIZChFwcm9jZWR1cmVfc3RhcnRlZBgC",
            "IAEoCBIiChplc3RpbWF0ZWRfZHVyYXRpb25fc2Vjb25kcxgDIAEoDSIdChtH",
            "ZXRDYWxpYnJhdGlvblN0YXR1c1JlcXVlc3QiwgEKHEdldENhbGlicmF0aW9u",
            "U3RhdHVzUmVzcG9uc2USKwoNcmVzcG9uc2VfYmFzZRgBIAEoCzIULmRldmlj",
            "ZS5SZXNwb25zZUJhc2USFgoOaXNfY2FsaWJyYXRpbmcYAiABKAgSGAoQcHJv",
            "Z3Jlc3NfcGVyY2VudBgDIAEoDRIeChZ0aW1lX3JlbWFpbmluZ19zZWNvbmRz",
            "GAQgASgNEiMKFGNoYW5uZWxzX2luX3Byb2dyZXNzGAUgAygNQgWSPwIQBCKd",
            "AgoYTWFuYWdlQ2FsaWJyYXRpb25SZXF1ZXN0Ei8KCW9wZXJhdGlvbhgBIAEo",
            "DjIcLmRldmljZS5DYWxpYnJhdGlvbk9wZXJhdGlvbhI7CgtyZWFkX3BhcmFt",
            "cxgCIAEoCzIkLmRldmljZS5SZWFkQ2FsaWJyYXRpb25QYXJhbXNSZXF1ZXN0",
            "SAASQwoPc3RhcnRfcHJvY2VkdXJlGAMgASgLMiguZGV2aWNlLlN0YXJ0Q2Fs",
            "aWJyYXRpb25Qcm9jZWR1cmVSZXF1ZXN0SAASOQoKZ2V0X3N0YXR1cxgEIAEo",
            "CzIjLmRldmljZS5HZXRDYWxpYnJhdGlvblN0YXR1c1JlcXVlc3RIAEITChFv",
            "cGVyYXRpb25fcGF5bG9hZCKqAgoZTWFuYWdlQ2FsaWJyYXRpb25SZXNwb25z",
            "ZRIvCglvcGVyYXRpb24YASABKA4yHC5kZXZpY2UuQ2FsaWJyYXRpb25PcGVy",
            "YXRpb24SPAoLcmVhZF9wYXJhbXMYAiABKAsyJS5kZXZpY2UuUmVhZENhbGli",
            "cmF0aW9uUGFyYW1zUmVzcG9uc2VIABJECg9zdGFydF9wcm9jZWR1cmUYAyAB",
            "KAsyKS5kZXZpY2UuU3RhcnRDYWxpYnJhdGlvblByb2NlZHVyZVJlc3BvbnNl",
            "SAASOgoKZ2V0X3N0YXR1cxgEIAEoCzIkLmRldmljZS5HZXRDYWxpYnJhdGlv",
            "blN0YXR1c1Jlc3BvbnNlSABCHAoab3BlcmF0aW9uX3Jlc3BvbnNlX3BheWxv",
            "YWQiUgoSQ2FsaWJyYXRpb25SZXF1ZXN0EjwKEm1hbmFnZV9jYWxpYnJhdGlv",
            "bhgBIAEoCzIgLmRldmljZS5NYW5hZ2VDYWxpYnJhdGlvblJlcXVlc3QiVAoT",
            "Q2FsaWJyYXRpb25SZXNwb25zZRI9ChJtYW5hZ2VfY2FsaWJyYXRpb24YASAB",
            "KAsyIS5kZXZpY2UuTWFuYWdlQ2FsaWJyYXRpb25SZXNwb25zZSpVChZDYWxp",
            "YnJhdGlvbkNvbW1hbmRUeXBlEiMKH0NBTElCUkFUSU9OX0NPTU1BTkRfVU5T",
            "UEVDSUZJRUQQABIWChJNQU5BR0VfQ0FMSUJSQVRJT04QASpzChRDYWxpYnJh",
            "dGlvbk9wZXJhdGlvbhIlCiFDQUxJQlJBVElPTl9PUEVSQVRJT05fVU5TUEVD",
            "SUZJRUQQABIPCgtSRUFEX1BBUkFNUxABEhMKD1NUQVJUX1BST0NFRFVSRRAC",
            "Eg4KCkdFVF9TVEFUVVMQA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NanopbReflection.Descriptor, global::Device.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Device.CalibrationCommandType), typeof(global::Device.CalibrationOperation), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.AdcChannelCalibrationParams), global::Device.AdcChannelCalibrationParams.Parser, new[]{ "ChannelId", "Offset", "Gain", "LastUpdatedMs", "CalibrationExpiresMs", "TemperatureAtCalCelsius" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.ReadCalibrationParamsRequest), global::Device.ReadCalibrationParamsRequest.Parser, new[]{ "ChannelIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.ReadCalibrationParamsResponse), global::Device.ReadCalibrationParamsResponse.Parser, new[]{ "ResponseBase", "Parameters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.StartCalibrationProcedureRequest), global::Device.StartCalibrationProcedureRequest.Parser, new[]{ "ChannelIds", "ForceCalibration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.StartCalibrationProcedureResponse), global::Device.StartCalibrationProcedureResponse.Parser, new[]{ "ResponseBase", "ProcedureStarted", "EstimatedDurationSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.GetCalibrationStatusRequest), global::Device.GetCalibrationStatusRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.GetCalibrationStatusResponse), global::Device.GetCalibrationStatusResponse.Parser, new[]{ "ResponseBase", "IsCalibrating", "ProgressPercent", "TimeRemainingSeconds", "ChannelsInProgress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.ManageCalibrationRequest), global::Device.ManageCalibrationRequest.Parser, new[]{ "Operation", "ReadParams", "StartProcedure", "GetStatus" }, new[]{ "OperationPayload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.ManageCalibrationResponse), global::Device.ManageCalibrationResponse.Parser, new[]{ "Operation", "ReadParams", "StartProcedure", "GetStatus" }, new[]{ "OperationResponsePayload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.CalibrationRequest), global::Device.CalibrationRequest.Parser, new[]{ "ManageCalibration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.CalibrationResponse), global::Device.CalibrationResponse.Parser, new[]{ "ManageCalibration" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Top-level command for the Calibration category.
  /// See SRS-102.0, Rev 0, for more details.
  /// </summary>
  public enum CalibrationCommandType {
    [pbr::OriginalName("CALIBRATION_COMMAND_UNSPECIFIED")] CalibrationCommandUnspecified = 0,
    [pbr::OriginalName("MANAGE_CALIBRATION")] ManageCalibration = 1,
  }

  /// <summary>
  /// Operations available under the MANAGE_CALIBRATION command
  /// </summary>
  public enum CalibrationOperation {
    [pbr::OriginalName("CALIBRATION_OPERATION_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("READ_PARAMS")] ReadParams = 1,
    [pbr::OriginalName("START_PROCEDURE")] StartProcedure = 2,
    [pbr::OriginalName("GET_STATUS")] GetStatus = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Contains the calculated calibration parameters for a single ADC channel
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AdcChannelCalibrationParams : pb::IMessage<AdcChannelCalibrationParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdcChannelCalibrationParams> _parser = new pb::MessageParser<AdcChannelCalibrationParams>(() => new AdcChannelCalibrationParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AdcChannelCalibrationParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdcChannelCalibrationParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdcChannelCalibrationParams(AdcChannelCalibrationParams other) : this() {
      channelId_ = other.channelId_;
      offset_ = other.offset_;
      gain_ = other.gain_;
      lastUpdatedMs_ = other.lastUpdatedMs_;
      calibrationExpiresMs_ = other.calibrationExpiresMs_;
      temperatureAtCalCelsius_ = other.temperatureAtCalCelsius_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AdcChannelCalibrationParams Clone() {
      return new AdcChannelCalibrationParams(this);
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 1;
    private uint channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private float offset_;
    /// <summary>
    /// Offset, perhaps just numerical values instead of float and offset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "gain" field.</summary>
    public const int GainFieldNumber = 3;
    private float gain_;
    /// <summary>
    /// Gain, perhaps just numerical values ins tead of float and offset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Gain {
      get { return gain_; }
      set {
        gain_ = value;
      }
    }

    /// <summary>Field number for the "last_updated_ms" field.</summary>
    public const int LastUpdatedMsFieldNumber = 4;
    private ulong lastUpdatedMs_;
    /// <summary>
    /// Timestamp of when these parameters were last calculated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LastUpdatedMs {
      get { return lastUpdatedMs_; }
      set {
        lastUpdatedMs_ = value;
      }
    }

    /// <summary>Field number for the "calibration_expires_ms" field.</summary>
    public const int CalibrationExpiresMsFieldNumber = 5;
    private ulong calibrationExpiresMs_;
    /// <summary>
    /// Timestamp for when these parameters expire
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong CalibrationExpiresMs {
      get { return calibrationExpiresMs_; }
      set {
        calibrationExpiresMs_ = value;
      }
    }

    /// <summary>Field number for the "temperature_at_cal_celsius" field.</summary>
    public const int TemperatureAtCalCelsiusFieldNumber = 6;
    private float temperatureAtCalCelsius_;
    /// <summary>
    /// Maybe
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TemperatureAtCalCelsius {
      get { return temperatureAtCalCelsius_; }
      set {
        temperatureAtCalCelsius_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AdcChannelCalibrationParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AdcChannelCalibrationParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Offset, other.Offset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Gain, other.Gain)) return false;
      if (LastUpdatedMs != other.LastUpdatedMs) return false;
      if (CalibrationExpiresMs != other.CalibrationExpiresMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TemperatureAtCalCelsius, other.TemperatureAtCalCelsius)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (Offset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Offset);
      if (Gain != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Gain);
      if (LastUpdatedMs != 0UL) hash ^= LastUpdatedMs.GetHashCode();
      if (CalibrationExpiresMs != 0UL) hash ^= CalibrationExpiresMs.GetHashCode();
      if (TemperatureAtCalCelsius != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TemperatureAtCalCelsius);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ChannelId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (Offset != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Offset);
      }
      if (Gain != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Gain);
      }
      if (LastUpdatedMs != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(LastUpdatedMs);
      }
      if (CalibrationExpiresMs != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CalibrationExpiresMs);
      }
      if (TemperatureAtCalCelsius != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TemperatureAtCalCelsius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ChannelId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (Offset != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Offset);
      }
      if (Gain != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Gain);
      }
      if (LastUpdatedMs != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(LastUpdatedMs);
      }
      if (CalibrationExpiresMs != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CalibrationExpiresMs);
      }
      if (TemperatureAtCalCelsius != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(TemperatureAtCalCelsius);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (Offset != 0F) {
        size += 1 + 4;
      }
      if (Gain != 0F) {
        size += 1 + 4;
      }
      if (LastUpdatedMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastUpdatedMs);
      }
      if (CalibrationExpiresMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CalibrationExpiresMs);
      }
      if (TemperatureAtCalCelsius != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AdcChannelCalibrationParams other) {
      if (other == null) {
        return;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.Offset != 0F) {
        Offset = other.Offset;
      }
      if (other.Gain != 0F) {
        Gain = other.Gain;
      }
      if (other.LastUpdatedMs != 0UL) {
        LastUpdatedMs = other.LastUpdatedMs;
      }
      if (other.CalibrationExpiresMs != 0UL) {
        CalibrationExpiresMs = other.CalibrationExpiresMs;
      }
      if (other.TemperatureAtCalCelsius != 0F) {
        TemperatureAtCalCelsius = other.TemperatureAtCalCelsius;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 21: {
            Offset = input.ReadFloat();
            break;
          }
          case 29: {
            Gain = input.ReadFloat();
            break;
          }
          case 32: {
            LastUpdatedMs = input.ReadUInt64();
            break;
          }
          case 40: {
            CalibrationExpiresMs = input.ReadUInt64();
            break;
          }
          case 53: {
            TemperatureAtCalCelsius = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 21: {
            Offset = input.ReadFloat();
            break;
          }
          case 29: {
            Gain = input.ReadFloat();
            break;
          }
          case 32: {
            LastUpdatedMs = input.ReadUInt64();
            break;
          }
          case 40: {
            CalibrationExpiresMs = input.ReadUInt64();
            break;
          }
          case 53: {
            TemperatureAtCalCelsius = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for READ_PARAMS operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReadCalibrationParamsRequest : pb::IMessage<ReadCalibrationParamsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadCalibrationParamsRequest> _parser = new pb::MessageParser<ReadCalibrationParamsRequest>(() => new ReadCalibrationParamsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReadCalibrationParamsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadCalibrationParamsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadCalibrationParamsRequest(ReadCalibrationParamsRequest other) : this() {
      channelIds_ = other.channelIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadCalibrationParamsRequest Clone() {
      return new ReadCalibrationParamsRequest(this);
    }

    /// <summary>Field number for the "channel_ids" field.</summary>
    public const int ChannelIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_channelIds_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> channelIds_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// Return all channels if empty (channel_ids = [])
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ChannelIds {
      get { return channelIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReadCalibrationParamsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReadCalibrationParamsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channelIds_.Equals(other.channelIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channelIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      channelIds_.WriteTo(output, _repeated_channelIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      channelIds_.WriteTo(ref output, _repeated_channelIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += channelIds_.CalculateSize(_repeated_channelIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReadCalibrationParamsRequest other) {
      if (other == null) {
        return;
      }
      channelIds_.Add(other.channelIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            channelIds_.AddEntriesFrom(input, _repeated_channelIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            channelIds_.AddEntriesFrom(ref input, _repeated_channelIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for READ_PARAMS operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReadCalibrationParamsResponse : pb::IMessage<ReadCalibrationParamsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadCalibrationParamsResponse> _parser = new pb::MessageParser<ReadCalibrationParamsResponse>(() => new ReadCalibrationParamsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReadCalibrationParamsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadCalibrationParamsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadCalibrationParamsResponse(ReadCalibrationParamsResponse other) : this() {
      responseBase_ = other.responseBase_ != null ? other.responseBase_.Clone() : null;
      parameters_ = other.parameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReadCalibrationParamsResponse Clone() {
      return new ReadCalibrationParamsResponse(this);
    }

    /// <summary>Field number for the "response_base" field.</summary>
    public const int ResponseBaseFieldNumber = 1;
    private global::Device.ResponseBase responseBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ResponseBase ResponseBase {
      get { return responseBase_; }
      set {
        responseBase_ = value;
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Device.AdcChannelCalibrationParams> _repeated_parameters_codec
        = pb::FieldCodec.ForMessage(18, global::Device.AdcChannelCalibrationParams.Parser);
    private readonly pbc::RepeatedField<global::Device.AdcChannelCalibrationParams> parameters_ = new pbc::RepeatedField<global::Device.AdcChannelCalibrationParams>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Device.AdcChannelCalibrationParams> Parameters {
      get { return parameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReadCalibrationParamsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReadCalibrationParamsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseBase, other.ResponseBase)) return false;
      if(!parameters_.Equals(other.parameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseBase_ != null) hash ^= ResponseBase.GetHashCode();
      hash ^= parameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      parameters_.WriteTo(output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      parameters_.WriteTo(ref output, _repeated_parameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseBase);
      }
      size += parameters_.CalculateSize(_repeated_parameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReadCalibrationParamsResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseBase_ != null) {
        if (responseBase_ == null) {
          ResponseBase = new global::Device.ResponseBase();
        }
        ResponseBase.MergeFrom(other.ResponseBase);
      }
      parameters_.Add(other.parameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(input, _repeated_parameters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 18: {
            parameters_.AddEntriesFrom(ref input, _repeated_parameters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for START_PROCEDURE operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StartCalibrationProcedureRequest : pb::IMessage<StartCalibrationProcedureRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartCalibrationProcedureRequest> _parser = new pb::MessageParser<StartCalibrationProcedureRequest>(() => new StartCalibrationProcedureRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartCalibrationProcedureRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartCalibrationProcedureRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartCalibrationProcedureRequest(StartCalibrationProcedureRequest other) : this() {
      channelIds_ = other.channelIds_.Clone();
      forceCalibration_ = other.forceCalibration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartCalibrationProcedureRequest Clone() {
      return new StartCalibrationProcedureRequest(this);
    }

    /// <summary>Field number for the "channel_ids" field.</summary>
    public const int ChannelIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_channelIds_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> channelIds_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// Calibrate all channels if empty (channel_ids=[])
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ChannelIds {
      get { return channelIds_; }
    }

    /// <summary>Field number for the "force_calibration" field.</summary>
    public const int ForceCalibrationFieldNumber = 2;
    private bool forceCalibration_;
    /// <summary>
    /// If true, run even if not expired
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ForceCalibration {
      get { return forceCalibration_; }
      set {
        forceCalibration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartCalibrationProcedureRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartCalibrationProcedureRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channelIds_.Equals(other.channelIds_)) return false;
      if (ForceCalibration != other.ForceCalibration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channelIds_.GetHashCode();
      if (ForceCalibration != false) hash ^= ForceCalibration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      channelIds_.WriteTo(output, _repeated_channelIds_codec);
      if (ForceCalibration != false) {
        output.WriteRawTag(16);
        output.WriteBool(ForceCalibration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      channelIds_.WriteTo(ref output, _repeated_channelIds_codec);
      if (ForceCalibration != false) {
        output.WriteRawTag(16);
        output.WriteBool(ForceCalibration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += channelIds_.CalculateSize(_repeated_channelIds_codec);
      if (ForceCalibration != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartCalibrationProcedureRequest other) {
      if (other == null) {
        return;
      }
      channelIds_.Add(other.channelIds_);
      if (other.ForceCalibration != false) {
        ForceCalibration = other.ForceCalibration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            channelIds_.AddEntriesFrom(input, _repeated_channelIds_codec);
            break;
          }
          case 16: {
            ForceCalibration = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            channelIds_.AddEntriesFrom(ref input, _repeated_channelIds_codec);
            break;
          }
          case 16: {
            ForceCalibration = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for START_PROCEDURE operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class StartCalibrationProcedureResponse : pb::IMessage<StartCalibrationProcedureResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartCalibrationProcedureResponse> _parser = new pb::MessageParser<StartCalibrationProcedureResponse>(() => new StartCalibrationProcedureResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartCalibrationProcedureResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartCalibrationProcedureResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartCalibrationProcedureResponse(StartCalibrationProcedureResponse other) : this() {
      responseBase_ = other.responseBase_ != null ? other.responseBase_.Clone() : null;
      procedureStarted_ = other.procedureStarted_;
      estimatedDurationSeconds_ = other.estimatedDurationSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartCalibrationProcedureResponse Clone() {
      return new StartCalibrationProcedureResponse(this);
    }

    /// <summary>Field number for the "response_base" field.</summary>
    public const int ResponseBaseFieldNumber = 1;
    private global::Device.ResponseBase responseBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ResponseBase ResponseBase {
      get { return responseBase_; }
      set {
        responseBase_ = value;
      }
    }

    /// <summary>Field number for the "procedure_started" field.</summary>
    public const int ProcedureStartedFieldNumber = 2;
    private bool procedureStarted_;
    /// <summary>
    /// Confirmation it started
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ProcedureStarted {
      get { return procedureStarted_; }
      set {
        procedureStarted_ = value;
      }
    }

    /// <summary>Field number for the "estimated_duration_seconds" field.</summary>
    public const int EstimatedDurationSecondsFieldNumber = 3;
    private uint estimatedDurationSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EstimatedDurationSeconds {
      get { return estimatedDurationSeconds_; }
      set {
        estimatedDurationSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartCalibrationProcedureResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartCalibrationProcedureResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseBase, other.ResponseBase)) return false;
      if (ProcedureStarted != other.ProcedureStarted) return false;
      if (EstimatedDurationSeconds != other.EstimatedDurationSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseBase_ != null) hash ^= ResponseBase.GetHashCode();
      if (ProcedureStarted != false) hash ^= ProcedureStarted.GetHashCode();
      if (EstimatedDurationSeconds != 0) hash ^= EstimatedDurationSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (ProcedureStarted != false) {
        output.WriteRawTag(16);
        output.WriteBool(ProcedureStarted);
      }
      if (EstimatedDurationSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EstimatedDurationSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (ProcedureStarted != false) {
        output.WriteRawTag(16);
        output.WriteBool(ProcedureStarted);
      }
      if (EstimatedDurationSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EstimatedDurationSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseBase);
      }
      if (ProcedureStarted != false) {
        size += 1 + 1;
      }
      if (EstimatedDurationSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EstimatedDurationSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartCalibrationProcedureResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseBase_ != null) {
        if (responseBase_ == null) {
          ResponseBase = new global::Device.ResponseBase();
        }
        ResponseBase.MergeFrom(other.ResponseBase);
      }
      if (other.ProcedureStarted != false) {
        ProcedureStarted = other.ProcedureStarted;
      }
      if (other.EstimatedDurationSeconds != 0) {
        EstimatedDurationSeconds = other.EstimatedDurationSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 16: {
            ProcedureStarted = input.ReadBool();
            break;
          }
          case 24: {
            EstimatedDurationSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 16: {
            ProcedureStarted = input.ReadBool();
            break;
          }
          case 24: {
            EstimatedDurationSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for GET_STATUS operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetCalibrationStatusRequest : pb::IMessage<GetCalibrationStatusRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCalibrationStatusRequest> _parser = new pb::MessageParser<GetCalibrationStatusRequest>(() => new GetCalibrationStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetCalibrationStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCalibrationStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCalibrationStatusRequest(GetCalibrationStatusRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCalibrationStatusRequest Clone() {
      return new GetCalibrationStatusRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetCalibrationStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetCalibrationStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetCalibrationStatusRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for GET_STATUS operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetCalibrationStatusResponse : pb::IMessage<GetCalibrationStatusResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCalibrationStatusResponse> _parser = new pb::MessageParser<GetCalibrationStatusResponse>(() => new GetCalibrationStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetCalibrationStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCalibrationStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCalibrationStatusResponse(GetCalibrationStatusResponse other) : this() {
      responseBase_ = other.responseBase_ != null ? other.responseBase_.Clone() : null;
      isCalibrating_ = other.isCalibrating_;
      progressPercent_ = other.progressPercent_;
      timeRemainingSeconds_ = other.timeRemainingSeconds_;
      channelsInProgress_ = other.channelsInProgress_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCalibrationStatusResponse Clone() {
      return new GetCalibrationStatusResponse(this);
    }

    /// <summary>Field number for the "response_base" field.</summary>
    public const int ResponseBaseFieldNumber = 1;
    private global::Device.ResponseBase responseBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ResponseBase ResponseBase {
      get { return responseBase_; }
      set {
        responseBase_ = value;
      }
    }

    /// <summary>Field number for the "is_calibrating" field.</summary>
    public const int IsCalibratingFieldNumber = 2;
    private bool isCalibrating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCalibrating {
      get { return isCalibrating_; }
      set {
        isCalibrating_ = value;
      }
    }

    /// <summary>Field number for the "progress_percent" field.</summary>
    public const int ProgressPercentFieldNumber = 3;
    private uint progressPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ProgressPercent {
      get { return progressPercent_; }
      set {
        progressPercent_ = value;
      }
    }

    /// <summary>Field number for the "time_remaining_seconds" field.</summary>
    public const int TimeRemainingSecondsFieldNumber = 4;
    private uint timeRemainingSeconds_;
    /// <summary>
    /// Estimated time left if is_calibrating
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeRemainingSeconds {
      get { return timeRemainingSeconds_; }
      set {
        timeRemainingSeconds_ = value;
      }
    }

    /// <summary>Field number for the "channels_in_progress" field.</summary>
    public const int ChannelsInProgressFieldNumber = 5;
    private static readonly pb::FieldCodec<uint> _repeated_channelsInProgress_codec
        = pb::FieldCodec.ForUInt32(42);
    private readonly pbc::RepeatedField<uint> channelsInProgress_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ChannelsInProgress {
      get { return channelsInProgress_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetCalibrationStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetCalibrationStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseBase, other.ResponseBase)) return false;
      if (IsCalibrating != other.IsCalibrating) return false;
      if (ProgressPercent != other.ProgressPercent) return false;
      if (TimeRemainingSeconds != other.TimeRemainingSeconds) return false;
      if(!channelsInProgress_.Equals(other.channelsInProgress_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseBase_ != null) hash ^= ResponseBase.GetHashCode();
      if (IsCalibrating != false) hash ^= IsCalibrating.GetHashCode();
      if (ProgressPercent != 0) hash ^= ProgressPercent.GetHashCode();
      if (TimeRemainingSeconds != 0) hash ^= TimeRemainingSeconds.GetHashCode();
      hash ^= channelsInProgress_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (IsCalibrating != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCalibrating);
      }
      if (ProgressPercent != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ProgressPercent);
      }
      if (TimeRemainingSeconds != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimeRemainingSeconds);
      }
      channelsInProgress_.WriteTo(output, _repeated_channelsInProgress_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (IsCalibrating != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsCalibrating);
      }
      if (ProgressPercent != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ProgressPercent);
      }
      if (TimeRemainingSeconds != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TimeRemainingSeconds);
      }
      channelsInProgress_.WriteTo(ref output, _repeated_channelsInProgress_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseBase);
      }
      if (IsCalibrating != false) {
        size += 1 + 1;
      }
      if (ProgressPercent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProgressPercent);
      }
      if (TimeRemainingSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeRemainingSeconds);
      }
      size += channelsInProgress_.CalculateSize(_repeated_channelsInProgress_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetCalibrationStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseBase_ != null) {
        if (responseBase_ == null) {
          ResponseBase = new global::Device.ResponseBase();
        }
        ResponseBase.MergeFrom(other.ResponseBase);
      }
      if (other.IsCalibrating != false) {
        IsCalibrating = other.IsCalibrating;
      }
      if (other.ProgressPercent != 0) {
        ProgressPercent = other.ProgressPercent;
      }
      if (other.TimeRemainingSeconds != 0) {
        TimeRemainingSeconds = other.TimeRemainingSeconds;
      }
      channelsInProgress_.Add(other.channelsInProgress_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 16: {
            IsCalibrating = input.ReadBool();
            break;
          }
          case 24: {
            ProgressPercent = input.ReadUInt32();
            break;
          }
          case 32: {
            TimeRemainingSeconds = input.ReadUInt32();
            break;
          }
          case 42:
          case 40: {
            channelsInProgress_.AddEntriesFrom(input, _repeated_channelsInProgress_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 16: {
            IsCalibrating = input.ReadBool();
            break;
          }
          case 24: {
            ProgressPercent = input.ReadUInt32();
            break;
          }
          case 32: {
            TimeRemainingSeconds = input.ReadUInt32();
            break;
          }
          case 42:
          case 40: {
            channelsInProgress_.AddEntriesFrom(ref input, _repeated_channelsInProgress_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request wrapper for the MANAGE_CALIBRATION command type
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ManageCalibrationRequest : pb::IMessage<ManageCalibrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManageCalibrationRequest> _parser = new pb::MessageParser<ManageCalibrationRequest>(() => new ManageCalibrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ManageCalibrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManageCalibrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManageCalibrationRequest(ManageCalibrationRequest other) : this() {
      operation_ = other.operation_;
      switch (other.OperationPayloadCase) {
        case OperationPayloadOneofCase.ReadParams:
          ReadParams = other.ReadParams.Clone();
          break;
        case OperationPayloadOneofCase.StartProcedure:
          StartProcedure = other.StartProcedure.Clone();
          break;
        case OperationPayloadOneofCase.GetStatus:
          GetStatus = other.GetStatus.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManageCalibrationRequest Clone() {
      return new ManageCalibrationRequest(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Device.CalibrationOperation operation_ = global::Device.CalibrationOperation.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.CalibrationOperation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "read_params" field.</summary>
    public const int ReadParamsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ReadCalibrationParamsRequest ReadParams {
      get { return operationPayloadCase_ == OperationPayloadOneofCase.ReadParams ? (global::Device.ReadCalibrationParamsRequest) operationPayload_ : null; }
      set {
        operationPayload_ = value;
        operationPayloadCase_ = value == null ? OperationPayloadOneofCase.None : OperationPayloadOneofCase.ReadParams;
      }
    }

    /// <summary>Field number for the "start_procedure" field.</summary>
    public const int StartProcedureFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.StartCalibrationProcedureRequest StartProcedure {
      get { return operationPayloadCase_ == OperationPayloadOneofCase.StartProcedure ? (global::Device.StartCalibrationProcedureRequest) operationPayload_ : null; }
      set {
        operationPayload_ = value;
        operationPayloadCase_ = value == null ? OperationPayloadOneofCase.None : OperationPayloadOneofCase.StartProcedure;
      }
    }

    /// <summary>Field number for the "get_status" field.</summary>
    public const int GetStatusFieldNumber = 4;
    /// <summary>
    /// CancelCalibrationProcedureRequest cancel_procedure = 5; // Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.GetCalibrationStatusRequest GetStatus {
      get { return operationPayloadCase_ == OperationPayloadOneofCase.GetStatus ? (global::Device.GetCalibrationStatusRequest) operationPayload_ : null; }
      set {
        operationPayload_ = value;
        operationPayloadCase_ = value == null ? OperationPayloadOneofCase.None : OperationPayloadOneofCase.GetStatus;
      }
    }

    private object operationPayload_;
    /// <summary>Enum of possible cases for the "operation_payload" oneof.</summary>
    public enum OperationPayloadOneofCase {
      None = 0,
      ReadParams = 2,
      StartProcedure = 3,
      GetStatus = 4,
    }
    private OperationPayloadOneofCase operationPayloadCase_ = OperationPayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationPayloadOneofCase OperationPayloadCase {
      get { return operationPayloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperationPayload() {
      operationPayloadCase_ = OperationPayloadOneofCase.None;
      operationPayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ManageCalibrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ManageCalibrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Operation != other.Operation) return false;
      if (!object.Equals(ReadParams, other.ReadParams)) return false;
      if (!object.Equals(StartProcedure, other.StartProcedure)) return false;
      if (!object.Equals(GetStatus, other.GetStatus)) return false;
      if (OperationPayloadCase != other.OperationPayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Operation != global::Device.CalibrationOperation.Unspecified) hash ^= Operation.GetHashCode();
      if (operationPayloadCase_ == OperationPayloadOneofCase.ReadParams) hash ^= ReadParams.GetHashCode();
      if (operationPayloadCase_ == OperationPayloadOneofCase.StartProcedure) hash ^= StartProcedure.GetHashCode();
      if (operationPayloadCase_ == OperationPayloadOneofCase.GetStatus) hash ^= GetStatus.GetHashCode();
      hash ^= (int) operationPayloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Operation != global::Device.CalibrationOperation.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.ReadParams) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadParams);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.StartProcedure) {
        output.WriteRawTag(26);
        output.WriteMessage(StartProcedure);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.GetStatus) {
        output.WriteRawTag(34);
        output.WriteMessage(GetStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Operation != global::Device.CalibrationOperation.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.ReadParams) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadParams);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.StartProcedure) {
        output.WriteRawTag(26);
        output.WriteMessage(StartProcedure);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.GetStatus) {
        output.WriteRawTag(34);
        output.WriteMessage(GetStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Operation != global::Device.CalibrationOperation.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.ReadParams) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadParams);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.StartProcedure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartProcedure);
      }
      if (operationPayloadCase_ == OperationPayloadOneofCase.GetStatus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ManageCalibrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Operation != global::Device.CalibrationOperation.Unspecified) {
        Operation = other.Operation;
      }
      switch (other.OperationPayloadCase) {
        case OperationPayloadOneofCase.ReadParams:
          if (ReadParams == null) {
            ReadParams = new global::Device.ReadCalibrationParamsRequest();
          }
          ReadParams.MergeFrom(other.ReadParams);
          break;
        case OperationPayloadOneofCase.StartProcedure:
          if (StartProcedure == null) {
            StartProcedure = new global::Device.StartCalibrationProcedureRequest();
          }
          StartProcedure.MergeFrom(other.StartProcedure);
          break;
        case OperationPayloadOneofCase.GetStatus:
          if (GetStatus == null) {
            GetStatus = new global::Device.GetCalibrationStatusRequest();
          }
          GetStatus.MergeFrom(other.GetStatus);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Operation = (global::Device.CalibrationOperation) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.ReadCalibrationParamsRequest subBuilder = new global::Device.ReadCalibrationParamsRequest();
            if (operationPayloadCase_ == OperationPayloadOneofCase.ReadParams) {
              subBuilder.MergeFrom(ReadParams);
            }
            input.ReadMessage(subBuilder);
            ReadParams = subBuilder;
            break;
          }
          case 26: {
            global::Device.StartCalibrationProcedureRequest subBuilder = new global::Device.StartCalibrationProcedureRequest();
            if (operationPayloadCase_ == OperationPayloadOneofCase.StartProcedure) {
              subBuilder.MergeFrom(StartProcedure);
            }
            input.ReadMessage(subBuilder);
            StartProcedure = subBuilder;
            break;
          }
          case 34: {
            global::Device.GetCalibrationStatusRequest subBuilder = new global::Device.GetCalibrationStatusRequest();
            if (operationPayloadCase_ == OperationPayloadOneofCase.GetStatus) {
              subBuilder.MergeFrom(GetStatus);
            }
            input.ReadMessage(subBuilder);
            GetStatus = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Operation = (global::Device.CalibrationOperation) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.ReadCalibrationParamsRequest subBuilder = new global::Device.ReadCalibrationParamsRequest();
            if (operationPayloadCase_ == OperationPayloadOneofCase.ReadParams) {
              subBuilder.MergeFrom(ReadParams);
            }
            input.ReadMessage(subBuilder);
            ReadParams = subBuilder;
            break;
          }
          case 26: {
            global::Device.StartCalibrationProcedureRequest subBuilder = new global::Device.StartCalibrationProcedureRequest();
            if (operationPayloadCase_ == OperationPayloadOneofCase.StartProcedure) {
              subBuilder.MergeFrom(StartProcedure);
            }
            input.ReadMessage(subBuilder);
            StartProcedure = subBuilder;
            break;
          }
          case 34: {
            global::Device.GetCalibrationStatusRequest subBuilder = new global::Device.GetCalibrationStatusRequest();
            if (operationPayloadCase_ == OperationPayloadOneofCase.GetStatus) {
              subBuilder.MergeFrom(GetStatus);
            }
            input.ReadMessage(subBuilder);
            GetStatus = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response wrapper for the MANAGE_CALIBRATION command type
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ManageCalibrationResponse : pb::IMessage<ManageCalibrationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManageCalibrationResponse> _parser = new pb::MessageParser<ManageCalibrationResponse>(() => new ManageCalibrationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ManageCalibrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManageCalibrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManageCalibrationResponse(ManageCalibrationResponse other) : this() {
      operation_ = other.operation_;
      switch (other.OperationResponsePayloadCase) {
        case OperationResponsePayloadOneofCase.ReadParams:
          ReadParams = other.ReadParams.Clone();
          break;
        case OperationResponsePayloadOneofCase.StartProcedure:
          StartProcedure = other.StartProcedure.Clone();
          break;
        case OperationResponsePayloadOneofCase.GetStatus:
          GetStatus = other.GetStatus.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManageCalibrationResponse Clone() {
      return new ManageCalibrationResponse(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Device.CalibrationOperation operation_ = global::Device.CalibrationOperation.Unspecified;
    /// <summary>
    /// Echoes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.CalibrationOperation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "read_params" field.</summary>
    public const int ReadParamsFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ReadCalibrationParamsResponse ReadParams {
      get { return operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.ReadParams ? (global::Device.ReadCalibrationParamsResponse) operationResponsePayload_ : null; }
      set {
        operationResponsePayload_ = value;
        operationResponsePayloadCase_ = value == null ? OperationResponsePayloadOneofCase.None : OperationResponsePayloadOneofCase.ReadParams;
      }
    }

    /// <summary>Field number for the "start_procedure" field.</summary>
    public const int StartProcedureFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.StartCalibrationProcedureResponse StartProcedure {
      get { return operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.StartProcedure ? (global::Device.StartCalibrationProcedureResponse) operationResponsePayload_ : null; }
      set {
        operationResponsePayload_ = value;
        operationResponsePayloadCase_ = value == null ? OperationResponsePayloadOneofCase.None : OperationResponsePayloadOneofCase.StartProcedure;
      }
    }

    /// <summary>Field number for the "get_status" field.</summary>
    public const int GetStatusFieldNumber = 4;
    /// <summary>
    /// CancelCalibrationProcedureResponse cancel_procedure = 5; // Optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.GetCalibrationStatusResponse GetStatus {
      get { return operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.GetStatus ? (global::Device.GetCalibrationStatusResponse) operationResponsePayload_ : null; }
      set {
        operationResponsePayload_ = value;
        operationResponsePayloadCase_ = value == null ? OperationResponsePayloadOneofCase.None : OperationResponsePayloadOneofCase.GetStatus;
      }
    }

    private object operationResponsePayload_;
    /// <summary>Enum of possible cases for the "operation_response_payload" oneof.</summary>
    public enum OperationResponsePayloadOneofCase {
      None = 0,
      ReadParams = 2,
      StartProcedure = 3,
      GetStatus = 4,
    }
    private OperationResponsePayloadOneofCase operationResponsePayloadCase_ = OperationResponsePayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OperationResponsePayloadOneofCase OperationResponsePayloadCase {
      get { return operationResponsePayloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperationResponsePayload() {
      operationResponsePayloadCase_ = OperationResponsePayloadOneofCase.None;
      operationResponsePayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ManageCalibrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ManageCalibrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Operation != other.Operation) return false;
      if (!object.Equals(ReadParams, other.ReadParams)) return false;
      if (!object.Equals(StartProcedure, other.StartProcedure)) return false;
      if (!object.Equals(GetStatus, other.GetStatus)) return false;
      if (OperationResponsePayloadCase != other.OperationResponsePayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Operation != global::Device.CalibrationOperation.Unspecified) hash ^= Operation.GetHashCode();
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.ReadParams) hash ^= ReadParams.GetHashCode();
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.StartProcedure) hash ^= StartProcedure.GetHashCode();
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.GetStatus) hash ^= GetStatus.GetHashCode();
      hash ^= (int) operationResponsePayloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Operation != global::Device.CalibrationOperation.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.ReadParams) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadParams);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.StartProcedure) {
        output.WriteRawTag(26);
        output.WriteMessage(StartProcedure);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.GetStatus) {
        output.WriteRawTag(34);
        output.WriteMessage(GetStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Operation != global::Device.CalibrationOperation.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.ReadParams) {
        output.WriteRawTag(18);
        output.WriteMessage(ReadParams);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.StartProcedure) {
        output.WriteRawTag(26);
        output.WriteMessage(StartProcedure);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.GetStatus) {
        output.WriteRawTag(34);
        output.WriteMessage(GetStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Operation != global::Device.CalibrationOperation.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.ReadParams) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadParams);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.StartProcedure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartProcedure);
      }
      if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.GetStatus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ManageCalibrationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Operation != global::Device.CalibrationOperation.Unspecified) {
        Operation = other.Operation;
      }
      switch (other.OperationResponsePayloadCase) {
        case OperationResponsePayloadOneofCase.ReadParams:
          if (ReadParams == null) {
            ReadParams = new global::Device.ReadCalibrationParamsResponse();
          }
          ReadParams.MergeFrom(other.ReadParams);
          break;
        case OperationResponsePayloadOneofCase.StartProcedure:
          if (StartProcedure == null) {
            StartProcedure = new global::Device.StartCalibrationProcedureResponse();
          }
          StartProcedure.MergeFrom(other.StartProcedure);
          break;
        case OperationResponsePayloadOneofCase.GetStatus:
          if (GetStatus == null) {
            GetStatus = new global::Device.GetCalibrationStatusResponse();
          }
          GetStatus.MergeFrom(other.GetStatus);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Operation = (global::Device.CalibrationOperation) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.ReadCalibrationParamsResponse subBuilder = new global::Device.ReadCalibrationParamsResponse();
            if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.ReadParams) {
              subBuilder.MergeFrom(ReadParams);
            }
            input.ReadMessage(subBuilder);
            ReadParams = subBuilder;
            break;
          }
          case 26: {
            global::Device.StartCalibrationProcedureResponse subBuilder = new global::Device.StartCalibrationProcedureResponse();
            if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.StartProcedure) {
              subBuilder.MergeFrom(StartProcedure);
            }
            input.ReadMessage(subBuilder);
            StartProcedure = subBuilder;
            break;
          }
          case 34: {
            global::Device.GetCalibrationStatusResponse subBuilder = new global::Device.GetCalibrationStatusResponse();
            if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.GetStatus) {
              subBuilder.MergeFrom(GetStatus);
            }
            input.ReadMessage(subBuilder);
            GetStatus = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Operation = (global::Device.CalibrationOperation) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.ReadCalibrationParamsResponse subBuilder = new global::Device.ReadCalibrationParamsResponse();
            if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.ReadParams) {
              subBuilder.MergeFrom(ReadParams);
            }
            input.ReadMessage(subBuilder);
            ReadParams = subBuilder;
            break;
          }
          case 26: {
            global::Device.StartCalibrationProcedureResponse subBuilder = new global::Device.StartCalibrationProcedureResponse();
            if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.StartProcedure) {
              subBuilder.MergeFrom(StartProcedure);
            }
            input.ReadMessage(subBuilder);
            StartProcedure = subBuilder;
            break;
          }
          case 34: {
            global::Device.GetCalibrationStatusResponse subBuilder = new global::Device.GetCalibrationStatusResponse();
            if (operationResponsePayloadCase_ == OperationResponsePayloadOneofCase.GetStatus) {
              subBuilder.MergeFrom(GetStatus);
            }
            input.ReadMessage(subBuilder);
            GetStatus = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Top-level request message for the Calibration category
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CalibrationRequest : pb::IMessage<CalibrationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CalibrationRequest> _parser = new pb::MessageParser<CalibrationRequest>(() => new CalibrationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CalibrationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalibrationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalibrationRequest(CalibrationRequest other) : this() {
      manageCalibration_ = other.manageCalibration_ != null ? other.manageCalibration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalibrationRequest Clone() {
      return new CalibrationRequest(this);
    }

    /// <summary>Field number for the "manage_calibration" field.</summary>
    public const int ManageCalibrationFieldNumber = 1;
    private global::Device.ManageCalibrationRequest manageCalibration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ManageCalibrationRequest ManageCalibration {
      get { return manageCalibration_; }
      set {
        manageCalibration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CalibrationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CalibrationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ManageCalibration, other.ManageCalibration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (manageCalibration_ != null) hash ^= ManageCalibration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (manageCalibration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ManageCalibration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (manageCalibration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ManageCalibration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (manageCalibration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManageCalibration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CalibrationRequest other) {
      if (other == null) {
        return;
      }
      if (other.manageCalibration_ != null) {
        if (manageCalibration_ == null) {
          ManageCalibration = new global::Device.ManageCalibrationRequest();
        }
        ManageCalibration.MergeFrom(other.ManageCalibration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (manageCalibration_ == null) {
              ManageCalibration = new global::Device.ManageCalibrationRequest();
            }
            input.ReadMessage(ManageCalibration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (manageCalibration_ == null) {
              ManageCalibration = new global::Device.ManageCalibrationRequest();
            }
            input.ReadMessage(ManageCalibration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Top-level response message for the Calibration category
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CalibrationResponse : pb::IMessage<CalibrationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CalibrationResponse> _parser = new pb::MessageParser<CalibrationResponse>(() => new CalibrationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CalibrationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.CalibrationReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalibrationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalibrationResponse(CalibrationResponse other) : this() {
      manageCalibration_ = other.manageCalibration_ != null ? other.manageCalibration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CalibrationResponse Clone() {
      return new CalibrationResponse(this);
    }

    /// <summary>Field number for the "manage_calibration" field.</summary>
    public const int ManageCalibrationFieldNumber = 1;
    private global::Device.ManageCalibrationResponse manageCalibration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ManageCalibrationResponse ManageCalibration {
      get { return manageCalibration_; }
      set {
        manageCalibration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CalibrationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CalibrationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ManageCalibration, other.ManageCalibration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (manageCalibration_ != null) hash ^= ManageCalibration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (manageCalibration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ManageCalibration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (manageCalibration_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ManageCalibration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (manageCalibration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManageCalibration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CalibrationResponse other) {
      if (other == null) {
        return;
      }
      if (other.manageCalibration_ != null) {
        if (manageCalibration_ == null) {
          ManageCalibration = new global::Device.ManageCalibrationResponse();
        }
        ManageCalibration.MergeFrom(other.ManageCalibration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (manageCalibration_ == null) {
              ManageCalibration = new global::Device.ManageCalibrationResponse();
            }
            input.ReadMessage(ManageCalibration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (manageCalibration_ == null) {
              ManageCalibration = new global::Device.ManageCalibrationResponse();
            }
            input.ReadMessage(ManageCalibration);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
