// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: firmware.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Device {

  /// <summary>Holder for reflection information generated from firmware.proto</summary>
  public static partial class FirmwareReflection {

    #region Descriptor
    /// <summary>File descriptor for firmware.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FirmwareReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5maXJtd2FyZS5wcm90bxIGZGV2aWNlGgxuYW5vcGIucHJvdG8aDGNvbW1v",
            "bi5wcm90byIYChZHZXRGaXJtd2FyZUluZm9SZXF1ZXN0ItQBChdHZXRGaXJt",
            "d2FyZUluZm9SZXNwb25zZRIrCg1yZXNwb25zZV9iYXNlGAEgASgLMhQuZGV2",
            "aWNlLlJlc3BvbnNlQmFzZRIWCgd2ZXJzaW9uGAIgASgJQgWSPwIIEBIZCgpi",
            "dWlsZF9kYXRlGAMgASgJQgWSPwIIEBIZCgpidWlsZF9oYXNoGAQgASgJQgWS",
            "PwIIKRIbChNzZWN1cmVfYm9vdF9lbmFibGVkGAUgASgIEiEKEmN1cnJlbnRf",
            "aW1hZ2Vfc2xvdBgGIAEoCUIFkj8CCAgikAEKFkZpcm13YXJlUHJlcGFyZVBh",
            "eWxvYWQSGwoTZmlybXdhcmVfc2l6ZV9ieXRlcxgBIAEoDRIfChBmaXJtd2Fy",
            "ZV92ZXJzaW9uGAIgASgJQgWSPwIIEBIZCglzaWduYXR1cmUYAyABKAxCBpI/",
            "AwiAAhIdChVibG9ja19zaXplX3ByZWZlcmVuY2UYBCABKA0iXQoXRmlybXdh",
            "cmVUcmFuc2ZlclBheWxvYWQSHQoVYmxvY2tfc2VxdWVuY2VfbnVtYmVyGAEg",
            "ASgNEhQKBGRhdGEYAiABKAxCBpI/AwiACBINCgVjcmMzMhgDIAEoDSJMChVG",
            "aXJtd2FyZVZlcmlmeVBheWxvYWQSGQoRdG90YWxfYmxvY2tzX3NlbnQYASAB",
            "KA0SGAoQZnVsbF9pbWFnZV9jcmMzMhgCIAEoDSI0ChRGaXJtd2FyZUFwcGx5",
            "UGF5bG9hZBIcChRyZWJvb3RfZGVsYXlfc2Vjb25kcxgBIAEoDSItChRGaXJt",
            "d2FyZUFib3J0UGF5bG9hZBIVCgZyZWFzb24YASABKAlCBZI/AgggInoKHkZp",
            "cm13YXJlUHJlcGFyZVJlc3BvbnNlUGF5bG9hZBIYChByZWFkeV90b19yZWNl",
            "aXZlGAEgASgIEhYKDm1heF9ibG9ja19zaXplGAIgASgNEiYKHmVzdGltYXRl",
            "ZF9zdG9yYWdlX3RpbWVfc2Vjb25kcxgDIAEoDSJQCh9GaXJtd2FyZVRyYW5z",
            "ZmVyUmVzcG9uc2VQYXlsb2FkEh0KFWJsb2NrX3NlcXVlbmNlX251bWJlchgB",
            "IAEoDRIOCgZjcmNfb2sYAiABKAgiPAodRmlybXdhcmVWZXJpZnlSZXNwb25z",
            "ZVBheWxvYWQSGwoTdmVyaWZpY2F0aW9uX3Bhc3NlZBgBIAEoCCI9ChxGaXJt",
            "d2FyZUFwcGx5UmVzcG9uc2VQYXlsb2FkEh0KFWFwcGxpY2F0aW9uX3NjaGVk",
            "dWxlZBgBIAEoCCIvChxGaXJtd2FyZUFib3J0UmVzcG9uc2VQYXlsb2FkEg8K",
            "B2Fib3J0ZWQYASABKAgi0wIKFVVwZGF0ZUZpcm13YXJlUmVxdWVzdBIyCglv",
            "cGVyYXRpb24YASABKA4yHy5kZXZpY2UuRmlybXdhcmVVcGRhdGVPcGVyYXRp",
            "b24SMQoHcHJlcGFyZRgCIAEoCzIeLmRldmljZS5GaXJtd2FyZVByZXBhcmVQ",
            "YXlsb2FkSAASMwoIdHJhbnNmZXIYAyABKAsyHy5kZXZpY2UuRmlybXdhcmVU",
            "cmFuc2ZlclBheWxvYWRIABIvCgZ2ZXJpZnkYBCABKAsyHS5kZXZpY2UuRmly",
            "bXdhcmVWZXJpZnlQYXlsb2FkSAASLQoFYXBwbHkYBSABKAsyHC5kZXZpY2Uu",
            "RmlybXdhcmVBcHBseVBheWxvYWRIABItCgVhYm9ydBgGIAEoCzIcLmRldmlj",
            "ZS5GaXJtd2FyZUFib3J0UGF5bG9hZEgAQg8KDXN0YWdlX3BheWxvYWQisgMK",
            "FlVwZGF0ZUZpcm13YXJlUmVzcG9uc2USKwoNcmVzcG9uc2VfYmFzZRgBIAEo",
            "CzIULmRldmljZS5SZXNwb25zZUJhc2USMgoJb3BlcmF0aW9uGAIgASgOMh8u",
            "ZGV2aWNlLkZpcm13YXJlVXBkYXRlT3BlcmF0aW9uEjkKB3ByZXBhcmUYAyAB",
            "KAsyJi5kZXZpY2UuRmlybXdhcmVQcmVwYXJlUmVzcG9uc2VQYXlsb2FkSAAS",
            "OwoIdHJhbnNmZXIYBCABKAsyJy5kZXZpY2UuRmlybXdhcmVUcmFuc2ZlclJl",
            "c3BvbnNlUGF5bG9hZEgAEjcKBnZlcmlmeRgFIAEoCzIlLmRldmljZS5GaXJt",
            "d2FyZVZlcmlmeVJlc3BvbnNlUGF5bG9hZEgAEjUKBWFwcGx5GAYgASgLMiQu",
            "ZGV2aWNlLkZpcm13YXJlQXBwbHlSZXNwb25zZVBheWxvYWRIABI1CgVhYm9y",
            "dBgHIAEoCzIkLmRldmljZS5GaXJtd2FyZUFib3J0UmVzcG9uc2VQYXlsb2Fk",
            "SABCGAoWc3RhZ2VfcmVzcG9uc2VfcGF5bG9hZCK8AQoPRmlybXdhcmVSZXF1",
            "ZXN0EjEKDGNvbW1hbmRfdHlwZRgBIAEoDjIbLmRldmljZS5GaXJtd2FyZUNv",
            "bW1hbmRUeXBlEjIKCGdldF9pbmZvGAIgASgLMh4uZGV2aWNlLkdldEZpcm13",
            "YXJlSW5mb1JlcXVlc3RIABIvCgZ1cGRhdGUYAyABKAsyHS5kZXZpY2UuVXBk",
            "YXRlRmlybXdhcmVSZXF1ZXN0SABCEQoPY29tbWFuZF9wYXlsb2FkIsgBChBG",
            "aXJtd2FyZVJlc3BvbnNlEjEKDGNvbW1hbmRfdHlwZRgBIAEoDjIbLmRldmlj",
            "ZS5GaXJtd2FyZUNvbW1hbmRUeXBlEjMKCGdldF9pbmZvGAIgASgLMh8uZGV2",
            "aWNlLkdldEZpcm13YXJlSW5mb1Jlc3BvbnNlSAASMAoGdXBkYXRlGAMgASgL",
            "Mh4uZGV2aWNlLlVwZGF0ZUZpcm13YXJlUmVzcG9uc2VIAEIaChhjb21tYW5k",
            "X3Jlc3BvbnNlX3BheWxvYWQqUQoTRmlybXdhcmVDb21tYW5kVHlwZRIgChxG",
            "SVJNV0FSRV9DT01NQU5EX1VOU1BFQ0lGSUVEEAASDAoIR0VUX0lORk8QARIK",
            "CgZVUERBVEUQAiqvAQoXRmlybXdhcmVVcGRhdGVPcGVyYXRpb24SGwoXRklS",
            "TVdBUkVfT1BfVU5TUEVDSUZJRUQQABIXChNGSVJNV0FSRV9PUF9QUkVQQVJF",
            "EAESGAoURklSTVdBUkVfT1BfVFJBTlNGRVIQAhIWChJGSVJNV0FSRV9PUF9W",
            "RVJJRlkQAxIVChFGSVJNV0FSRV9PUF9BUFBMWRAEEhUKEUZJUk1XQVJFX09Q",
            "X0FCT1JUEAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::NanopbReflection.Descriptor, global::Device.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Device.FirmwareCommandType), typeof(global::Device.FirmwareUpdateOperation), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.GetFirmwareInfoRequest), global::Device.GetFirmwareInfoRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.GetFirmwareInfoResponse), global::Device.GetFirmwareInfoResponse.Parser, new[]{ "ResponseBase", "Version", "BuildDate", "BuildHash", "SecureBootEnabled", "CurrentImageSlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwarePreparePayload), global::Device.FirmwarePreparePayload.Parser, new[]{ "FirmwareSizeBytes", "FirmwareVersion", "Signature", "BlockSizePreference" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareTransferPayload), global::Device.FirmwareTransferPayload.Parser, new[]{ "BlockSequenceNumber", "Data", "Crc32" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareVerifyPayload), global::Device.FirmwareVerifyPayload.Parser, new[]{ "TotalBlocksSent", "FullImageCrc32" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareApplyPayload), global::Device.FirmwareApplyPayload.Parser, new[]{ "RebootDelaySeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareAbortPayload), global::Device.FirmwareAbortPayload.Parser, new[]{ "Reason" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwarePrepareResponsePayload), global::Device.FirmwarePrepareResponsePayload.Parser, new[]{ "ReadyToReceive", "MaxBlockSize", "EstimatedStorageTimeSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareTransferResponsePayload), global::Device.FirmwareTransferResponsePayload.Parser, new[]{ "BlockSequenceNumber", "CrcOk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareVerifyResponsePayload), global::Device.FirmwareVerifyResponsePayload.Parser, new[]{ "VerificationPassed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareApplyResponsePayload), global::Device.FirmwareApplyResponsePayload.Parser, new[]{ "ApplicationScheduled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareAbortResponsePayload), global::Device.FirmwareAbortResponsePayload.Parser, new[]{ "Aborted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.UpdateFirmwareRequest), global::Device.UpdateFirmwareRequest.Parser, new[]{ "Operation", "Prepare", "Transfer", "Verify", "Apply", "Abort" }, new[]{ "StagePayload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.UpdateFirmwareResponse), global::Device.UpdateFirmwareResponse.Parser, new[]{ "ResponseBase", "Operation", "Prepare", "Transfer", "Verify", "Apply", "Abort" }, new[]{ "StageResponsePayload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareRequest), global::Device.FirmwareRequest.Parser, new[]{ "CommandType", "GetInfo", "Update" }, new[]{ "CommandPayload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Device.FirmwareResponse), global::Device.FirmwareResponse.Parser, new[]{ "CommandType", "GetInfo", "Update" }, new[]{ "CommandResponsePayload" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Top-level commands for the Firmware category.
  /// See SRS-102.0, Rev 0, for more details.
  /// </summary>
  public enum FirmwareCommandType {
    [pbr::OriginalName("FIRMWARE_COMMAND_UNSPECIFIED")] FirmwareCommandUnspecified = 0,
    [pbr::OriginalName("GET_INFO")] GetInfo = 1,
    [pbr::OriginalName("UPDATE")] Update = 2,
  }

  /// <summary>
  /// Stages (operations) within the multi-step UPDATE command
  /// </summary>
  public enum FirmwareUpdateOperation {
    [pbr::OriginalName("FIRMWARE_OP_UNSPECIFIED")] FirmwareOpUnspecified = 0,
    [pbr::OriginalName("FIRMWARE_OP_PREPARE")] FirmwareOpPrepare = 1,
    [pbr::OriginalName("FIRMWARE_OP_TRANSFER")] FirmwareOpTransfer = 2,
    [pbr::OriginalName("FIRMWARE_OP_VERIFY")] FirmwareOpVerify = 3,
    [pbr::OriginalName("FIRMWARE_OP_APPLY")] FirmwareOpApply = 4,
    [pbr::OriginalName("FIRMWARE_OP_ABORT")] FirmwareOpAbort = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Payload for GET_INFO command request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetFirmwareInfoRequest : pb::IMessage<GetFirmwareInfoRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetFirmwareInfoRequest> _parser = new pb::MessageParser<GetFirmwareInfoRequest>(() => new GetFirmwareInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetFirmwareInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetFirmwareInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetFirmwareInfoRequest(GetFirmwareInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetFirmwareInfoRequest Clone() {
      return new GetFirmwareInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetFirmwareInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetFirmwareInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetFirmwareInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for GET_INFO command response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetFirmwareInfoResponse : pb::IMessage<GetFirmwareInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetFirmwareInfoResponse> _parser = new pb::MessageParser<GetFirmwareInfoResponse>(() => new GetFirmwareInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetFirmwareInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetFirmwareInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetFirmwareInfoResponse(GetFirmwareInfoResponse other) : this() {
      responseBase_ = other.responseBase_ != null ? other.responseBase_.Clone() : null;
      version_ = other.version_;
      buildDate_ = other.buildDate_;
      buildHash_ = other.buildHash_;
      secureBootEnabled_ = other.secureBootEnabled_;
      currentImageSlot_ = other.currentImageSlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetFirmwareInfoResponse Clone() {
      return new GetFirmwareInfoResponse(this);
    }

    /// <summary>Field number for the "response_base" field.</summary>
    public const int ResponseBaseFieldNumber = 1;
    private global::Device.ResponseBase responseBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ResponseBase ResponseBase {
      get { return responseBase_; }
      set {
        responseBase_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_date" field.</summary>
    public const int BuildDateFieldNumber = 3;
    private string buildDate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BuildDate {
      get { return buildDate_; }
      set {
        buildDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_hash" field.</summary>
    public const int BuildHashFieldNumber = 4;
    private string buildHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BuildHash {
      get { return buildHash_; }
      set {
        buildHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secure_boot_enabled" field.</summary>
    public const int SecureBootEnabledFieldNumber = 5;
    private bool secureBootEnabled_;
    /// <summary>
    /// Should always be true, consider removing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SecureBootEnabled {
      get { return secureBootEnabled_; }
      set {
        secureBootEnabled_ = value;
      }
    }

    /// <summary>Field number for the "current_image_slot" field.</summary>
    public const int CurrentImageSlotFieldNumber = 6;
    private string currentImageSlot_ = "";
    /// <summary>
    /// Identifier for the currently running image slot (e.g., "Current", "Updated")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurrentImageSlot {
      get { return currentImageSlot_; }
      set {
        currentImageSlot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetFirmwareInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetFirmwareInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseBase, other.ResponseBase)) return false;
      if (Version != other.Version) return false;
      if (BuildDate != other.BuildDate) return false;
      if (BuildHash != other.BuildHash) return false;
      if (SecureBootEnabled != other.SecureBootEnabled) return false;
      if (CurrentImageSlot != other.CurrentImageSlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseBase_ != null) hash ^= ResponseBase.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (BuildDate.Length != 0) hash ^= BuildDate.GetHashCode();
      if (BuildHash.Length != 0) hash ^= BuildHash.GetHashCode();
      if (SecureBootEnabled != false) hash ^= SecureBootEnabled.GetHashCode();
      if (CurrentImageSlot.Length != 0) hash ^= CurrentImageSlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (BuildDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuildDate);
      }
      if (BuildHash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BuildHash);
      }
      if (SecureBootEnabled != false) {
        output.WriteRawTag(40);
        output.WriteBool(SecureBootEnabled);
      }
      if (CurrentImageSlot.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CurrentImageSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (BuildDate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuildDate);
      }
      if (BuildHash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BuildHash);
      }
      if (SecureBootEnabled != false) {
        output.WriteRawTag(40);
        output.WriteBool(SecureBootEnabled);
      }
      if (CurrentImageSlot.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CurrentImageSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseBase);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (BuildDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildDate);
      }
      if (BuildHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuildHash);
      }
      if (SecureBootEnabled != false) {
        size += 1 + 1;
      }
      if (CurrentImageSlot.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentImageSlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetFirmwareInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseBase_ != null) {
        if (responseBase_ == null) {
          ResponseBase = new global::Device.ResponseBase();
        }
        ResponseBase.MergeFrom(other.ResponseBase);
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.BuildDate.Length != 0) {
        BuildDate = other.BuildDate;
      }
      if (other.BuildHash.Length != 0) {
        BuildHash = other.BuildHash;
      }
      if (other.SecureBootEnabled != false) {
        SecureBootEnabled = other.SecureBootEnabled;
      }
      if (other.CurrentImageSlot.Length != 0) {
        CurrentImageSlot = other.CurrentImageSlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            BuildDate = input.ReadString();
            break;
          }
          case 34: {
            BuildHash = input.ReadString();
            break;
          }
          case 40: {
            SecureBootEnabled = input.ReadBool();
            break;
          }
          case 50: {
            CurrentImageSlot = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
          case 26: {
            BuildDate = input.ReadString();
            break;
          }
          case 34: {
            BuildHash = input.ReadString();
            break;
          }
          case 40: {
            SecureBootEnabled = input.ReadBool();
            break;
          }
          case 50: {
            CurrentImageSlot = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for PREPARE operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwarePreparePayload : pb::IMessage<FirmwarePreparePayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwarePreparePayload> _parser = new pb::MessageParser<FirmwarePreparePayload>(() => new FirmwarePreparePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwarePreparePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwarePreparePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwarePreparePayload(FirmwarePreparePayload other) : this() {
      firmwareSizeBytes_ = other.firmwareSizeBytes_;
      firmwareVersion_ = other.firmwareVersion_;
      signature_ = other.signature_;
      blockSizePreference_ = other.blockSizePreference_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwarePreparePayload Clone() {
      return new FirmwarePreparePayload(this);
    }

    /// <summary>Field number for the "firmware_size_bytes" field.</summary>
    public const int FirmwareSizeBytesFieldNumber = 1;
    private uint firmwareSizeBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FirmwareSizeBytes {
      get { return firmwareSizeBytes_; }
      set {
        firmwareSizeBytes_ = value;
      }
    }

    /// <summary>Field number for the "firmware_version" field.</summary>
    public const int FirmwareVersionFieldNumber = 2;
    private string firmwareVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FirmwareVersion {
      get { return firmwareVersion_; }
      set {
        firmwareVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 3;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "block_size_preference" field.</summary>
    public const int BlockSizePreferenceFieldNumber = 4;
    private uint blockSizePreference_;
    /// <summary>
    /// Server's preferred block size (ok if device rejects/overrides)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlockSizePreference {
      get { return blockSizePreference_; }
      set {
        blockSizePreference_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwarePreparePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwarePreparePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirmwareSizeBytes != other.FirmwareSizeBytes) return false;
      if (FirmwareVersion != other.FirmwareVersion) return false;
      if (Signature != other.Signature) return false;
      if (BlockSizePreference != other.BlockSizePreference) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FirmwareSizeBytes != 0) hash ^= FirmwareSizeBytes.GetHashCode();
      if (FirmwareVersion.Length != 0) hash ^= FirmwareVersion.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (BlockSizePreference != 0) hash ^= BlockSizePreference.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FirmwareSizeBytes != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FirmwareSizeBytes);
      }
      if (FirmwareVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirmwareVersion);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Signature);
      }
      if (BlockSizePreference != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BlockSizePreference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FirmwareSizeBytes != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FirmwareSizeBytes);
      }
      if (FirmwareVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirmwareVersion);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Signature);
      }
      if (BlockSizePreference != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(BlockSizePreference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FirmwareSizeBytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FirmwareSizeBytes);
      }
      if (FirmwareVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirmwareVersion);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (BlockSizePreference != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlockSizePreference);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwarePreparePayload other) {
      if (other == null) {
        return;
      }
      if (other.FirmwareSizeBytes != 0) {
        FirmwareSizeBytes = other.FirmwareSizeBytes;
      }
      if (other.FirmwareVersion.Length != 0) {
        FirmwareVersion = other.FirmwareVersion;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.BlockSizePreference != 0) {
        BlockSizePreference = other.BlockSizePreference;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FirmwareSizeBytes = input.ReadUInt32();
            break;
          }
          case 18: {
            FirmwareVersion = input.ReadString();
            break;
          }
          case 26: {
            Signature = input.ReadBytes();
            break;
          }
          case 32: {
            BlockSizePreference = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FirmwareSizeBytes = input.ReadUInt32();
            break;
          }
          case 18: {
            FirmwareVersion = input.ReadString();
            break;
          }
          case 26: {
            Signature = input.ReadBytes();
            break;
          }
          case 32: {
            BlockSizePreference = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for TRANSFER operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareTransferPayload : pb::IMessage<FirmwareTransferPayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareTransferPayload> _parser = new pb::MessageParser<FirmwareTransferPayload>(() => new FirmwareTransferPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareTransferPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareTransferPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareTransferPayload(FirmwareTransferPayload other) : this() {
      blockSequenceNumber_ = other.blockSequenceNumber_;
      data_ = other.data_;
      crc32_ = other.crc32_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareTransferPayload Clone() {
      return new FirmwareTransferPayload(this);
    }

    /// <summary>Field number for the "block_sequence_number" field.</summary>
    public const int BlockSequenceNumberFieldNumber = 1;
    private uint blockSequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlockSequenceNumber {
      get { return blockSequenceNumber_; }
      set {
        blockSequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "crc32" field.</summary>
    public const int Crc32FieldNumber = 3;
    private uint crc32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Crc32 {
      get { return crc32_; }
      set {
        crc32_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareTransferPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareTransferPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockSequenceNumber != other.BlockSequenceNumber) return false;
      if (Data != other.Data) return false;
      if (Crc32 != other.Crc32) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockSequenceNumber != 0) hash ^= BlockSequenceNumber.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Crc32 != 0) hash ^= Crc32.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BlockSequenceNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlockSequenceNumber);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Crc32 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Crc32);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BlockSequenceNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlockSequenceNumber);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (Crc32 != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Crc32);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BlockSequenceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlockSequenceNumber);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Crc32 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Crc32);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareTransferPayload other) {
      if (other == null) {
        return;
      }
      if (other.BlockSequenceNumber != 0) {
        BlockSequenceNumber = other.BlockSequenceNumber;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Crc32 != 0) {
        Crc32 = other.Crc32;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockSequenceNumber = input.ReadUInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Crc32 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlockSequenceNumber = input.ReadUInt32();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 24: {
            Crc32 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for VERIFY operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareVerifyPayload : pb::IMessage<FirmwareVerifyPayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareVerifyPayload> _parser = new pb::MessageParser<FirmwareVerifyPayload>(() => new FirmwareVerifyPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareVerifyPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareVerifyPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareVerifyPayload(FirmwareVerifyPayload other) : this() {
      totalBlocksSent_ = other.totalBlocksSent_;
      fullImageCrc32_ = other.fullImageCrc32_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareVerifyPayload Clone() {
      return new FirmwareVerifyPayload(this);
    }

    /// <summary>Field number for the "total_blocks_sent" field.</summary>
    public const int TotalBlocksSentFieldNumber = 1;
    private uint totalBlocksSent_;
    /// <summary>
    /// Simple sanity check
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TotalBlocksSent {
      get { return totalBlocksSent_; }
      set {
        totalBlocksSent_ = value;
      }
    }

    /// <summary>Field number for the "full_image_crc32" field.</summary>
    public const int FullImageCrc32FieldNumber = 2;
    private uint fullImageCrc32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint FullImageCrc32 {
      get { return fullImageCrc32_; }
      set {
        fullImageCrc32_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareVerifyPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareVerifyPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalBlocksSent != other.TotalBlocksSent) return false;
      if (FullImageCrc32 != other.FullImageCrc32) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalBlocksSent != 0) hash ^= TotalBlocksSent.GetHashCode();
      if (FullImageCrc32 != 0) hash ^= FullImageCrc32.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalBlocksSent != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotalBlocksSent);
      }
      if (FullImageCrc32 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FullImageCrc32);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalBlocksSent != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TotalBlocksSent);
      }
      if (FullImageCrc32 != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(FullImageCrc32);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TotalBlocksSent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalBlocksSent);
      }
      if (FullImageCrc32 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FullImageCrc32);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareVerifyPayload other) {
      if (other == null) {
        return;
      }
      if (other.TotalBlocksSent != 0) {
        TotalBlocksSent = other.TotalBlocksSent;
      }
      if (other.FullImageCrc32 != 0) {
        FullImageCrc32 = other.FullImageCrc32;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalBlocksSent = input.ReadUInt32();
            break;
          }
          case 16: {
            FullImageCrc32 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalBlocksSent = input.ReadUInt32();
            break;
          }
          case 16: {
            FullImageCrc32 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for APPLY operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareApplyPayload : pb::IMessage<FirmwareApplyPayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareApplyPayload> _parser = new pb::MessageParser<FirmwareApplyPayload>(() => new FirmwareApplyPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareApplyPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareApplyPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareApplyPayload(FirmwareApplyPayload other) : this() {
      rebootDelaySeconds_ = other.rebootDelaySeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareApplyPayload Clone() {
      return new FirmwareApplyPayload(this);
    }

    /// <summary>Field number for the "reboot_delay_seconds" field.</summary>
    public const int RebootDelaySecondsFieldNumber = 1;
    private uint rebootDelaySeconds_;
    /// <summary>
    /// Delay before device reboots to apply (0 for immediate if supported)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RebootDelaySeconds {
      get { return rebootDelaySeconds_; }
      set {
        rebootDelaySeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareApplyPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareApplyPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RebootDelaySeconds != other.RebootDelaySeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RebootDelaySeconds != 0) hash ^= RebootDelaySeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RebootDelaySeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RebootDelaySeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RebootDelaySeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RebootDelaySeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RebootDelaySeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RebootDelaySeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareApplyPayload other) {
      if (other == null) {
        return;
      }
      if (other.RebootDelaySeconds != 0) {
        RebootDelaySeconds = other.RebootDelaySeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RebootDelaySeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RebootDelaySeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for ABORT operation request
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareAbortPayload : pb::IMessage<FirmwareAbortPayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareAbortPayload> _parser = new pb::MessageParser<FirmwareAbortPayload>(() => new FirmwareAbortPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareAbortPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareAbortPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareAbortPayload(FirmwareAbortPayload other) : this() {
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareAbortPayload Clone() {
      return new FirmwareAbortPayload(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private string reason_ = "";
    /// <summary>
    /// Optional reason for abort
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareAbortPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareAbortPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Reason.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Reason.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareAbortPayload other) {
      if (other == null) {
        return;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for PREPARE operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwarePrepareResponsePayload : pb::IMessage<FirmwarePrepareResponsePayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwarePrepareResponsePayload> _parser = new pb::MessageParser<FirmwarePrepareResponsePayload>(() => new FirmwarePrepareResponsePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwarePrepareResponsePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwarePrepareResponsePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwarePrepareResponsePayload(FirmwarePrepareResponsePayload other) : this() {
      readyToReceive_ = other.readyToReceive_;
      maxBlockSize_ = other.maxBlockSize_;
      estimatedStorageTimeSeconds_ = other.estimatedStorageTimeSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwarePrepareResponsePayload Clone() {
      return new FirmwarePrepareResponsePayload(this);
    }

    /// <summary>Field number for the "ready_to_receive" field.</summary>
    public const int ReadyToReceiveFieldNumber = 1;
    private bool readyToReceive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReadyToReceive {
      get { return readyToReceive_; }
      set {
        readyToReceive_ = value;
      }
    }

    /// <summary>Field number for the "max_block_size" field.</summary>
    public const int MaxBlockSizeFieldNumber = 2;
    private uint maxBlockSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxBlockSize {
      get { return maxBlockSize_; }
      set {
        maxBlockSize_ = value;
      }
    }

    /// <summary>Field number for the "estimated_storage_time_seconds" field.</summary>
    public const int EstimatedStorageTimeSecondsFieldNumber = 3;
    private uint estimatedStorageTimeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EstimatedStorageTimeSeconds {
      get { return estimatedStorageTimeSeconds_; }
      set {
        estimatedStorageTimeSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwarePrepareResponsePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwarePrepareResponsePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReadyToReceive != other.ReadyToReceive) return false;
      if (MaxBlockSize != other.MaxBlockSize) return false;
      if (EstimatedStorageTimeSeconds != other.EstimatedStorageTimeSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ReadyToReceive != false) hash ^= ReadyToReceive.GetHashCode();
      if (MaxBlockSize != 0) hash ^= MaxBlockSize.GetHashCode();
      if (EstimatedStorageTimeSeconds != 0) hash ^= EstimatedStorageTimeSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReadyToReceive != false) {
        output.WriteRawTag(8);
        output.WriteBool(ReadyToReceive);
      }
      if (MaxBlockSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxBlockSize);
      }
      if (EstimatedStorageTimeSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EstimatedStorageTimeSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReadyToReceive != false) {
        output.WriteRawTag(8);
        output.WriteBool(ReadyToReceive);
      }
      if (MaxBlockSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxBlockSize);
      }
      if (EstimatedStorageTimeSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EstimatedStorageTimeSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ReadyToReceive != false) {
        size += 1 + 1;
      }
      if (MaxBlockSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxBlockSize);
      }
      if (EstimatedStorageTimeSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EstimatedStorageTimeSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwarePrepareResponsePayload other) {
      if (other == null) {
        return;
      }
      if (other.ReadyToReceive != false) {
        ReadyToReceive = other.ReadyToReceive;
      }
      if (other.MaxBlockSize != 0) {
        MaxBlockSize = other.MaxBlockSize;
      }
      if (other.EstimatedStorageTimeSeconds != 0) {
        EstimatedStorageTimeSeconds = other.EstimatedStorageTimeSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReadyToReceive = input.ReadBool();
            break;
          }
          case 16: {
            MaxBlockSize = input.ReadUInt32();
            break;
          }
          case 24: {
            EstimatedStorageTimeSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ReadyToReceive = input.ReadBool();
            break;
          }
          case 16: {
            MaxBlockSize = input.ReadUInt32();
            break;
          }
          case 24: {
            EstimatedStorageTimeSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for TRANSFER operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareTransferResponsePayload : pb::IMessage<FirmwareTransferResponsePayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareTransferResponsePayload> _parser = new pb::MessageParser<FirmwareTransferResponsePayload>(() => new FirmwareTransferResponsePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareTransferResponsePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareTransferResponsePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareTransferResponsePayload(FirmwareTransferResponsePayload other) : this() {
      blockSequenceNumber_ = other.blockSequenceNumber_;
      crcOk_ = other.crcOk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareTransferResponsePayload Clone() {
      return new FirmwareTransferResponsePayload(this);
    }

    /// <summary>Field number for the "block_sequence_number" field.</summary>
    public const int BlockSequenceNumberFieldNumber = 1;
    private uint blockSequenceNumber_;
    /// <summary>
    /// Which block this confirms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint BlockSequenceNumber {
      get { return blockSequenceNumber_; }
      set {
        blockSequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "crc_ok" field.</summary>
    public const int CrcOkFieldNumber = 2;
    private bool crcOk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CrcOk {
      get { return crcOk_; }
      set {
        crcOk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareTransferResponsePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareTransferResponsePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockSequenceNumber != other.BlockSequenceNumber) return false;
      if (CrcOk != other.CrcOk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockSequenceNumber != 0) hash ^= BlockSequenceNumber.GetHashCode();
      if (CrcOk != false) hash ^= CrcOk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BlockSequenceNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlockSequenceNumber);
      }
      if (CrcOk != false) {
        output.WriteRawTag(16);
        output.WriteBool(CrcOk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BlockSequenceNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(BlockSequenceNumber);
      }
      if (CrcOk != false) {
        output.WriteRawTag(16);
        output.WriteBool(CrcOk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BlockSequenceNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BlockSequenceNumber);
      }
      if (CrcOk != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareTransferResponsePayload other) {
      if (other == null) {
        return;
      }
      if (other.BlockSequenceNumber != 0) {
        BlockSequenceNumber = other.BlockSequenceNumber;
      }
      if (other.CrcOk != false) {
        CrcOk = other.CrcOk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockSequenceNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            CrcOk = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlockSequenceNumber = input.ReadUInt32();
            break;
          }
          case 16: {
            CrcOk = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for VERIFY operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareVerifyResponsePayload : pb::IMessage<FirmwareVerifyResponsePayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareVerifyResponsePayload> _parser = new pb::MessageParser<FirmwareVerifyResponsePayload>(() => new FirmwareVerifyResponsePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareVerifyResponsePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareVerifyResponsePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareVerifyResponsePayload(FirmwareVerifyResponsePayload other) : this() {
      verificationPassed_ = other.verificationPassed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareVerifyResponsePayload Clone() {
      return new FirmwareVerifyResponsePayload(this);
    }

    /// <summary>Field number for the "verification_passed" field.</summary>
    public const int VerificationPassedFieldNumber = 1;
    private bool verificationPassed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VerificationPassed {
      get { return verificationPassed_; }
      set {
        verificationPassed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareVerifyResponsePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareVerifyResponsePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VerificationPassed != other.VerificationPassed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VerificationPassed != false) hash ^= VerificationPassed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VerificationPassed != false) {
        output.WriteRawTag(8);
        output.WriteBool(VerificationPassed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VerificationPassed != false) {
        output.WriteRawTag(8);
        output.WriteBool(VerificationPassed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VerificationPassed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareVerifyResponsePayload other) {
      if (other == null) {
        return;
      }
      if (other.VerificationPassed != false) {
        VerificationPassed = other.VerificationPassed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VerificationPassed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VerificationPassed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for APPLY operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareApplyResponsePayload : pb::IMessage<FirmwareApplyResponsePayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareApplyResponsePayload> _parser = new pb::MessageParser<FirmwareApplyResponsePayload>(() => new FirmwareApplyResponsePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareApplyResponsePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareApplyResponsePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareApplyResponsePayload(FirmwareApplyResponsePayload other) : this() {
      applicationScheduled_ = other.applicationScheduled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareApplyResponsePayload Clone() {
      return new FirmwareApplyResponsePayload(this);
    }

    /// <summary>Field number for the "application_scheduled" field.</summary>
    public const int ApplicationScheduledFieldNumber = 1;
    private bool applicationScheduled_;
    /// <summary>
    /// Is the device scheduled to apply/reboot?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ApplicationScheduled {
      get { return applicationScheduled_; }
      set {
        applicationScheduled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareApplyResponsePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareApplyResponsePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationScheduled != other.ApplicationScheduled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationScheduled != false) hash ^= ApplicationScheduled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ApplicationScheduled != false) {
        output.WriteRawTag(8);
        output.WriteBool(ApplicationScheduled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ApplicationScheduled != false) {
        output.WriteRawTag(8);
        output.WriteBool(ApplicationScheduled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationScheduled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareApplyResponsePayload other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationScheduled != false) {
        ApplicationScheduled = other.ApplicationScheduled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ApplicationScheduled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ApplicationScheduled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Payload for ABORT operation response
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareAbortResponsePayload : pb::IMessage<FirmwareAbortResponsePayload>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareAbortResponsePayload> _parser = new pb::MessageParser<FirmwareAbortResponsePayload>(() => new FirmwareAbortResponsePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareAbortResponsePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareAbortResponsePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareAbortResponsePayload(FirmwareAbortResponsePayload other) : this() {
      aborted_ = other.aborted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareAbortResponsePayload Clone() {
      return new FirmwareAbortResponsePayload(this);
    }

    /// <summary>Field number for the "aborted" field.</summary>
    public const int AbortedFieldNumber = 1;
    private bool aborted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Aborted {
      get { return aborted_; }
      set {
        aborted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareAbortResponsePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareAbortResponsePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Aborted != other.Aborted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Aborted != false) hash ^= Aborted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Aborted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Aborted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Aborted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Aborted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Aborted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareAbortResponsePayload other) {
      if (other == null) {
        return;
      }
      if (other.Aborted != false) {
        Aborted = other.Aborted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Aborted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Aborted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request wrapper for the UPDATE command type
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateFirmwareRequest : pb::IMessage<UpdateFirmwareRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateFirmwareRequest> _parser = new pb::MessageParser<UpdateFirmwareRequest>(() => new UpdateFirmwareRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateFirmwareRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareRequest(UpdateFirmwareRequest other) : this() {
      operation_ = other.operation_;
      switch (other.StagePayloadCase) {
        case StagePayloadOneofCase.Prepare:
          Prepare = other.Prepare.Clone();
          break;
        case StagePayloadOneofCase.Transfer:
          Transfer = other.Transfer.Clone();
          break;
        case StagePayloadOneofCase.Verify:
          Verify = other.Verify.Clone();
          break;
        case StagePayloadOneofCase.Apply:
          Apply = other.Apply.Clone();
          break;
        case StagePayloadOneofCase.Abort:
          Abort = other.Abort.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareRequest Clone() {
      return new UpdateFirmwareRequest(this);
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 1;
    private global::Device.FirmwareUpdateOperation operation_ = global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareUpdateOperation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "prepare" field.</summary>
    public const int PrepareFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwarePreparePayload Prepare {
      get { return stagePayloadCase_ == StagePayloadOneofCase.Prepare ? (global::Device.FirmwarePreparePayload) stagePayload_ : null; }
      set {
        stagePayload_ = value;
        stagePayloadCase_ = value == null ? StagePayloadOneofCase.None : StagePayloadOneofCase.Prepare;
      }
    }

    /// <summary>Field number for the "transfer" field.</summary>
    public const int TransferFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareTransferPayload Transfer {
      get { return stagePayloadCase_ == StagePayloadOneofCase.Transfer ? (global::Device.FirmwareTransferPayload) stagePayload_ : null; }
      set {
        stagePayload_ = value;
        stagePayloadCase_ = value == null ? StagePayloadOneofCase.None : StagePayloadOneofCase.Transfer;
      }
    }

    /// <summary>Field number for the "verify" field.</summary>
    public const int VerifyFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareVerifyPayload Verify {
      get { return stagePayloadCase_ == StagePayloadOneofCase.Verify ? (global::Device.FirmwareVerifyPayload) stagePayload_ : null; }
      set {
        stagePayload_ = value;
        stagePayloadCase_ = value == null ? StagePayloadOneofCase.None : StagePayloadOneofCase.Verify;
      }
    }

    /// <summary>Field number for the "apply" field.</summary>
    public const int ApplyFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareApplyPayload Apply {
      get { return stagePayloadCase_ == StagePayloadOneofCase.Apply ? (global::Device.FirmwareApplyPayload) stagePayload_ : null; }
      set {
        stagePayload_ = value;
        stagePayloadCase_ = value == null ? StagePayloadOneofCase.None : StagePayloadOneofCase.Apply;
      }
    }

    /// <summary>Field number for the "abort" field.</summary>
    public const int AbortFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareAbortPayload Abort {
      get { return stagePayloadCase_ == StagePayloadOneofCase.Abort ? (global::Device.FirmwareAbortPayload) stagePayload_ : null; }
      set {
        stagePayload_ = value;
        stagePayloadCase_ = value == null ? StagePayloadOneofCase.None : StagePayloadOneofCase.Abort;
      }
    }

    private object stagePayload_;
    /// <summary>Enum of possible cases for the "stage_payload" oneof.</summary>
    public enum StagePayloadOneofCase {
      None = 0,
      Prepare = 2,
      Transfer = 3,
      Verify = 4,
      Apply = 5,
      Abort = 6,
    }
    private StagePayloadOneofCase stagePayloadCase_ = StagePayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StagePayloadOneofCase StagePayloadCase {
      get { return stagePayloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStagePayload() {
      stagePayloadCase_ = StagePayloadOneofCase.None;
      stagePayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateFirmwareRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateFirmwareRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Operation != other.Operation) return false;
      if (!object.Equals(Prepare, other.Prepare)) return false;
      if (!object.Equals(Transfer, other.Transfer)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      if (!object.Equals(Apply, other.Apply)) return false;
      if (!object.Equals(Abort, other.Abort)) return false;
      if (StagePayloadCase != other.StagePayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) hash ^= Operation.GetHashCode();
      if (stagePayloadCase_ == StagePayloadOneofCase.Prepare) hash ^= Prepare.GetHashCode();
      if (stagePayloadCase_ == StagePayloadOneofCase.Transfer) hash ^= Transfer.GetHashCode();
      if (stagePayloadCase_ == StagePayloadOneofCase.Verify) hash ^= Verify.GetHashCode();
      if (stagePayloadCase_ == StagePayloadOneofCase.Apply) hash ^= Apply.GetHashCode();
      if (stagePayloadCase_ == StagePayloadOneofCase.Abort) hash ^= Abort.GetHashCode();
      hash ^= (int) stagePayloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Prepare) {
        output.WriteRawTag(18);
        output.WriteMessage(Prepare);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Transfer) {
        output.WriteRawTag(26);
        output.WriteMessage(Transfer);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Verify) {
        output.WriteRawTag(34);
        output.WriteMessage(Verify);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Apply) {
        output.WriteRawTag(42);
        output.WriteMessage(Apply);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Abort) {
        output.WriteRawTag(50);
        output.WriteMessage(Abort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Operation);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Prepare) {
        output.WriteRawTag(18);
        output.WriteMessage(Prepare);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Transfer) {
        output.WriteRawTag(26);
        output.WriteMessage(Transfer);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Verify) {
        output.WriteRawTag(34);
        output.WriteMessage(Verify);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Apply) {
        output.WriteRawTag(42);
        output.WriteMessage(Apply);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Abort) {
        output.WriteRawTag(50);
        output.WriteMessage(Abort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Prepare) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prepare);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Transfer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transfer);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Verify) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Apply) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Apply);
      }
      if (stagePayloadCase_ == StagePayloadOneofCase.Abort) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Abort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateFirmwareRequest other) {
      if (other == null) {
        return;
      }
      if (other.Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        Operation = other.Operation;
      }
      switch (other.StagePayloadCase) {
        case StagePayloadOneofCase.Prepare:
          if (Prepare == null) {
            Prepare = new global::Device.FirmwarePreparePayload();
          }
          Prepare.MergeFrom(other.Prepare);
          break;
        case StagePayloadOneofCase.Transfer:
          if (Transfer == null) {
            Transfer = new global::Device.FirmwareTransferPayload();
          }
          Transfer.MergeFrom(other.Transfer);
          break;
        case StagePayloadOneofCase.Verify:
          if (Verify == null) {
            Verify = new global::Device.FirmwareVerifyPayload();
          }
          Verify.MergeFrom(other.Verify);
          break;
        case StagePayloadOneofCase.Apply:
          if (Apply == null) {
            Apply = new global::Device.FirmwareApplyPayload();
          }
          Apply.MergeFrom(other.Apply);
          break;
        case StagePayloadOneofCase.Abort:
          if (Abort == null) {
            Abort = new global::Device.FirmwareAbortPayload();
          }
          Abort.MergeFrom(other.Abort);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Operation = (global::Device.FirmwareUpdateOperation) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.FirmwarePreparePayload subBuilder = new global::Device.FirmwarePreparePayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Prepare) {
              subBuilder.MergeFrom(Prepare);
            }
            input.ReadMessage(subBuilder);
            Prepare = subBuilder;
            break;
          }
          case 26: {
            global::Device.FirmwareTransferPayload subBuilder = new global::Device.FirmwareTransferPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Transfer) {
              subBuilder.MergeFrom(Transfer);
            }
            input.ReadMessage(subBuilder);
            Transfer = subBuilder;
            break;
          }
          case 34: {
            global::Device.FirmwareVerifyPayload subBuilder = new global::Device.FirmwareVerifyPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Verify) {
              subBuilder.MergeFrom(Verify);
            }
            input.ReadMessage(subBuilder);
            Verify = subBuilder;
            break;
          }
          case 42: {
            global::Device.FirmwareApplyPayload subBuilder = new global::Device.FirmwareApplyPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Apply) {
              subBuilder.MergeFrom(Apply);
            }
            input.ReadMessage(subBuilder);
            Apply = subBuilder;
            break;
          }
          case 50: {
            global::Device.FirmwareAbortPayload subBuilder = new global::Device.FirmwareAbortPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Abort) {
              subBuilder.MergeFrom(Abort);
            }
            input.ReadMessage(subBuilder);
            Abort = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Operation = (global::Device.FirmwareUpdateOperation) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.FirmwarePreparePayload subBuilder = new global::Device.FirmwarePreparePayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Prepare) {
              subBuilder.MergeFrom(Prepare);
            }
            input.ReadMessage(subBuilder);
            Prepare = subBuilder;
            break;
          }
          case 26: {
            global::Device.FirmwareTransferPayload subBuilder = new global::Device.FirmwareTransferPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Transfer) {
              subBuilder.MergeFrom(Transfer);
            }
            input.ReadMessage(subBuilder);
            Transfer = subBuilder;
            break;
          }
          case 34: {
            global::Device.FirmwareVerifyPayload subBuilder = new global::Device.FirmwareVerifyPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Verify) {
              subBuilder.MergeFrom(Verify);
            }
            input.ReadMessage(subBuilder);
            Verify = subBuilder;
            break;
          }
          case 42: {
            global::Device.FirmwareApplyPayload subBuilder = new global::Device.FirmwareApplyPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Apply) {
              subBuilder.MergeFrom(Apply);
            }
            input.ReadMessage(subBuilder);
            Apply = subBuilder;
            break;
          }
          case 50: {
            global::Device.FirmwareAbortPayload subBuilder = new global::Device.FirmwareAbortPayload();
            if (stagePayloadCase_ == StagePayloadOneofCase.Abort) {
              subBuilder.MergeFrom(Abort);
            }
            input.ReadMessage(subBuilder);
            Abort = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response wrapper for the UPDATE command type
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateFirmwareResponse : pb::IMessage<UpdateFirmwareResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateFirmwareResponse> _parser = new pb::MessageParser<UpdateFirmwareResponse>(() => new UpdateFirmwareResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateFirmwareResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareResponse(UpdateFirmwareResponse other) : this() {
      responseBase_ = other.responseBase_ != null ? other.responseBase_.Clone() : null;
      operation_ = other.operation_;
      switch (other.StageResponsePayloadCase) {
        case StageResponsePayloadOneofCase.Prepare:
          Prepare = other.Prepare.Clone();
          break;
        case StageResponsePayloadOneofCase.Transfer:
          Transfer = other.Transfer.Clone();
          break;
        case StageResponsePayloadOneofCase.Verify:
          Verify = other.Verify.Clone();
          break;
        case StageResponsePayloadOneofCase.Apply:
          Apply = other.Apply.Clone();
          break;
        case StageResponsePayloadOneofCase.Abort:
          Abort = other.Abort.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareResponse Clone() {
      return new UpdateFirmwareResponse(this);
    }

    /// <summary>Field number for the "response_base" field.</summary>
    public const int ResponseBaseFieldNumber = 1;
    private global::Device.ResponseBase responseBase_;
    /// <summary>
    /// Overall status for the stage operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.ResponseBase ResponseBase {
      get { return responseBase_; }
      set {
        responseBase_ = value;
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 2;
    private global::Device.FirmwareUpdateOperation operation_ = global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified;
    /// <summary>
    /// Echoes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareUpdateOperation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "prepare" field.</summary>
    public const int PrepareFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwarePrepareResponsePayload Prepare {
      get { return stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Prepare ? (global::Device.FirmwarePrepareResponsePayload) stageResponsePayload_ : null; }
      set {
        stageResponsePayload_ = value;
        stageResponsePayloadCase_ = value == null ? StageResponsePayloadOneofCase.None : StageResponsePayloadOneofCase.Prepare;
      }
    }

    /// <summary>Field number for the "transfer" field.</summary>
    public const int TransferFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareTransferResponsePayload Transfer {
      get { return stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Transfer ? (global::Device.FirmwareTransferResponsePayload) stageResponsePayload_ : null; }
      set {
        stageResponsePayload_ = value;
        stageResponsePayloadCase_ = value == null ? StageResponsePayloadOneofCase.None : StageResponsePayloadOneofCase.Transfer;
      }
    }

    /// <summary>Field number for the "verify" field.</summary>
    public const int VerifyFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareVerifyResponsePayload Verify {
      get { return stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Verify ? (global::Device.FirmwareVerifyResponsePayload) stageResponsePayload_ : null; }
      set {
        stageResponsePayload_ = value;
        stageResponsePayloadCase_ = value == null ? StageResponsePayloadOneofCase.None : StageResponsePayloadOneofCase.Verify;
      }
    }

    /// <summary>Field number for the "apply" field.</summary>
    public const int ApplyFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareApplyResponsePayload Apply {
      get { return stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Apply ? (global::Device.FirmwareApplyResponsePayload) stageResponsePayload_ : null; }
      set {
        stageResponsePayload_ = value;
        stageResponsePayloadCase_ = value == null ? StageResponsePayloadOneofCase.None : StageResponsePayloadOneofCase.Apply;
      }
    }

    /// <summary>Field number for the "abort" field.</summary>
    public const int AbortFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareAbortResponsePayload Abort {
      get { return stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Abort ? (global::Device.FirmwareAbortResponsePayload) stageResponsePayload_ : null; }
      set {
        stageResponsePayload_ = value;
        stageResponsePayloadCase_ = value == null ? StageResponsePayloadOneofCase.None : StageResponsePayloadOneofCase.Abort;
      }
    }

    private object stageResponsePayload_;
    /// <summary>Enum of possible cases for the "stage_response_payload" oneof.</summary>
    public enum StageResponsePayloadOneofCase {
      None = 0,
      Prepare = 3,
      Transfer = 4,
      Verify = 5,
      Apply = 6,
      Abort = 7,
    }
    private StageResponsePayloadOneofCase stageResponsePayloadCase_ = StageResponsePayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StageResponsePayloadOneofCase StageResponsePayloadCase {
      get { return stageResponsePayloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStageResponsePayload() {
      stageResponsePayloadCase_ = StageResponsePayloadOneofCase.None;
      stageResponsePayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateFirmwareResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateFirmwareResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseBase, other.ResponseBase)) return false;
      if (Operation != other.Operation) return false;
      if (!object.Equals(Prepare, other.Prepare)) return false;
      if (!object.Equals(Transfer, other.Transfer)) return false;
      if (!object.Equals(Verify, other.Verify)) return false;
      if (!object.Equals(Apply, other.Apply)) return false;
      if (!object.Equals(Abort, other.Abort)) return false;
      if (StageResponsePayloadCase != other.StageResponsePayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseBase_ != null) hash ^= ResponseBase.GetHashCode();
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) hash ^= Operation.GetHashCode();
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Prepare) hash ^= Prepare.GetHashCode();
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Transfer) hash ^= Transfer.GetHashCode();
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Verify) hash ^= Verify.GetHashCode();
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Apply) hash ^= Apply.GetHashCode();
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Abort) hash ^= Abort.GetHashCode();
      hash ^= (int) stageResponsePayloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Operation);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Prepare) {
        output.WriteRawTag(26);
        output.WriteMessage(Prepare);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Transfer) {
        output.WriteRawTag(34);
        output.WriteMessage(Transfer);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Verify) {
        output.WriteRawTag(42);
        output.WriteMessage(Verify);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Apply) {
        output.WriteRawTag(50);
        output.WriteMessage(Apply);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Abort) {
        output.WriteRawTag(58);
        output.WriteMessage(Abort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseBase);
      }
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Operation);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Prepare) {
        output.WriteRawTag(26);
        output.WriteMessage(Prepare);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Transfer) {
        output.WriteRawTag(34);
        output.WriteMessage(Transfer);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Verify) {
        output.WriteRawTag(42);
        output.WriteMessage(Verify);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Apply) {
        output.WriteRawTag(50);
        output.WriteMessage(Apply);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Abort) {
        output.WriteRawTag(58);
        output.WriteMessage(Abort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseBase);
      }
      if (Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Prepare) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prepare);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Transfer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transfer);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Verify) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Verify);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Apply) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Apply);
      }
      if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Abort) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Abort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateFirmwareResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseBase_ != null) {
        if (responseBase_ == null) {
          ResponseBase = new global::Device.ResponseBase();
        }
        ResponseBase.MergeFrom(other.ResponseBase);
      }
      if (other.Operation != global::Device.FirmwareUpdateOperation.FirmwareOpUnspecified) {
        Operation = other.Operation;
      }
      switch (other.StageResponsePayloadCase) {
        case StageResponsePayloadOneofCase.Prepare:
          if (Prepare == null) {
            Prepare = new global::Device.FirmwarePrepareResponsePayload();
          }
          Prepare.MergeFrom(other.Prepare);
          break;
        case StageResponsePayloadOneofCase.Transfer:
          if (Transfer == null) {
            Transfer = new global::Device.FirmwareTransferResponsePayload();
          }
          Transfer.MergeFrom(other.Transfer);
          break;
        case StageResponsePayloadOneofCase.Verify:
          if (Verify == null) {
            Verify = new global::Device.FirmwareVerifyResponsePayload();
          }
          Verify.MergeFrom(other.Verify);
          break;
        case StageResponsePayloadOneofCase.Apply:
          if (Apply == null) {
            Apply = new global::Device.FirmwareApplyResponsePayload();
          }
          Apply.MergeFrom(other.Apply);
          break;
        case StageResponsePayloadOneofCase.Abort:
          if (Abort == null) {
            Abort = new global::Device.FirmwareAbortResponsePayload();
          }
          Abort.MergeFrom(other.Abort);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 16: {
            Operation = (global::Device.FirmwareUpdateOperation) input.ReadEnum();
            break;
          }
          case 26: {
            global::Device.FirmwarePrepareResponsePayload subBuilder = new global::Device.FirmwarePrepareResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Prepare) {
              subBuilder.MergeFrom(Prepare);
            }
            input.ReadMessage(subBuilder);
            Prepare = subBuilder;
            break;
          }
          case 34: {
            global::Device.FirmwareTransferResponsePayload subBuilder = new global::Device.FirmwareTransferResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Transfer) {
              subBuilder.MergeFrom(Transfer);
            }
            input.ReadMessage(subBuilder);
            Transfer = subBuilder;
            break;
          }
          case 42: {
            global::Device.FirmwareVerifyResponsePayload subBuilder = new global::Device.FirmwareVerifyResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Verify) {
              subBuilder.MergeFrom(Verify);
            }
            input.ReadMessage(subBuilder);
            Verify = subBuilder;
            break;
          }
          case 50: {
            global::Device.FirmwareApplyResponsePayload subBuilder = new global::Device.FirmwareApplyResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Apply) {
              subBuilder.MergeFrom(Apply);
            }
            input.ReadMessage(subBuilder);
            Apply = subBuilder;
            break;
          }
          case 58: {
            global::Device.FirmwareAbortResponsePayload subBuilder = new global::Device.FirmwareAbortResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Abort) {
              subBuilder.MergeFrom(Abort);
            }
            input.ReadMessage(subBuilder);
            Abort = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (responseBase_ == null) {
              ResponseBase = new global::Device.ResponseBase();
            }
            input.ReadMessage(ResponseBase);
            break;
          }
          case 16: {
            Operation = (global::Device.FirmwareUpdateOperation) input.ReadEnum();
            break;
          }
          case 26: {
            global::Device.FirmwarePrepareResponsePayload subBuilder = new global::Device.FirmwarePrepareResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Prepare) {
              subBuilder.MergeFrom(Prepare);
            }
            input.ReadMessage(subBuilder);
            Prepare = subBuilder;
            break;
          }
          case 34: {
            global::Device.FirmwareTransferResponsePayload subBuilder = new global::Device.FirmwareTransferResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Transfer) {
              subBuilder.MergeFrom(Transfer);
            }
            input.ReadMessage(subBuilder);
            Transfer = subBuilder;
            break;
          }
          case 42: {
            global::Device.FirmwareVerifyResponsePayload subBuilder = new global::Device.FirmwareVerifyResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Verify) {
              subBuilder.MergeFrom(Verify);
            }
            input.ReadMessage(subBuilder);
            Verify = subBuilder;
            break;
          }
          case 50: {
            global::Device.FirmwareApplyResponsePayload subBuilder = new global::Device.FirmwareApplyResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Apply) {
              subBuilder.MergeFrom(Apply);
            }
            input.ReadMessage(subBuilder);
            Apply = subBuilder;
            break;
          }
          case 58: {
            global::Device.FirmwareAbortResponsePayload subBuilder = new global::Device.FirmwareAbortResponsePayload();
            if (stageResponsePayloadCase_ == StageResponsePayloadOneofCase.Abort) {
              subBuilder.MergeFrom(Abort);
            }
            input.ReadMessage(subBuilder);
            Abort = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Top-level request message for the Firmware category
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareRequest : pb::IMessage<FirmwareRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareRequest> _parser = new pb::MessageParser<FirmwareRequest>(() => new FirmwareRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareRequest(FirmwareRequest other) : this() {
      commandType_ = other.commandType_;
      switch (other.CommandPayloadCase) {
        case CommandPayloadOneofCase.GetInfo:
          GetInfo = other.GetInfo.Clone();
          break;
        case CommandPayloadOneofCase.Update:
          Update = other.Update.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareRequest Clone() {
      return new FirmwareRequest(this);
    }

    /// <summary>Field number for the "command_type" field.</summary>
    public const int CommandTypeFieldNumber = 1;
    private global::Device.FirmwareCommandType commandType_ = global::Device.FirmwareCommandType.FirmwareCommandUnspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareCommandType CommandType {
      get { return commandType_; }
      set {
        commandType_ = value;
      }
    }

    /// <summary>Field number for the "get_info" field.</summary>
    public const int GetInfoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.GetFirmwareInfoRequest GetInfo {
      get { return commandPayloadCase_ == CommandPayloadOneofCase.GetInfo ? (global::Device.GetFirmwareInfoRequest) commandPayload_ : null; }
      set {
        commandPayload_ = value;
        commandPayloadCase_ = value == null ? CommandPayloadOneofCase.None : CommandPayloadOneofCase.GetInfo;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.UpdateFirmwareRequest Update {
      get { return commandPayloadCase_ == CommandPayloadOneofCase.Update ? (global::Device.UpdateFirmwareRequest) commandPayload_ : null; }
      set {
        commandPayload_ = value;
        commandPayloadCase_ = value == null ? CommandPayloadOneofCase.None : CommandPayloadOneofCase.Update;
      }
    }

    private object commandPayload_;
    /// <summary>Enum of possible cases for the "command_payload" oneof.</summary>
    public enum CommandPayloadOneofCase {
      None = 0,
      GetInfo = 2,
      Update = 3,
    }
    private CommandPayloadOneofCase commandPayloadCase_ = CommandPayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommandPayloadOneofCase CommandPayloadCase {
      get { return commandPayloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommandPayload() {
      commandPayloadCase_ = CommandPayloadOneofCase.None;
      commandPayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandType != other.CommandType) return false;
      if (!object.Equals(GetInfo, other.GetInfo)) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (CommandPayloadCase != other.CommandPayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) hash ^= CommandType.GetHashCode();
      if (commandPayloadCase_ == CommandPayloadOneofCase.GetInfo) hash ^= GetInfo.GetHashCode();
      if (commandPayloadCase_ == CommandPayloadOneofCase.Update) hash ^= Update.GetHashCode();
      hash ^= (int) commandPayloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CommandType);
      }
      if (commandPayloadCase_ == CommandPayloadOneofCase.GetInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(GetInfo);
      }
      if (commandPayloadCase_ == CommandPayloadOneofCase.Update) {
        output.WriteRawTag(26);
        output.WriteMessage(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CommandType);
      }
      if (commandPayloadCase_ == CommandPayloadOneofCase.GetInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(GetInfo);
      }
      if (commandPayloadCase_ == CommandPayloadOneofCase.Update) {
        output.WriteRawTag(26);
        output.WriteMessage(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommandType);
      }
      if (commandPayloadCase_ == CommandPayloadOneofCase.GetInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetInfo);
      }
      if (commandPayloadCase_ == CommandPayloadOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareRequest other) {
      if (other == null) {
        return;
      }
      if (other.CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        CommandType = other.CommandType;
      }
      switch (other.CommandPayloadCase) {
        case CommandPayloadOneofCase.GetInfo:
          if (GetInfo == null) {
            GetInfo = new global::Device.GetFirmwareInfoRequest();
          }
          GetInfo.MergeFrom(other.GetInfo);
          break;
        case CommandPayloadOneofCase.Update:
          if (Update == null) {
            Update = new global::Device.UpdateFirmwareRequest();
          }
          Update.MergeFrom(other.Update);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandType = (global::Device.FirmwareCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.GetFirmwareInfoRequest subBuilder = new global::Device.GetFirmwareInfoRequest();
            if (commandPayloadCase_ == CommandPayloadOneofCase.GetInfo) {
              subBuilder.MergeFrom(GetInfo);
            }
            input.ReadMessage(subBuilder);
            GetInfo = subBuilder;
            break;
          }
          case 26: {
            global::Device.UpdateFirmwareRequest subBuilder = new global::Device.UpdateFirmwareRequest();
            if (commandPayloadCase_ == CommandPayloadOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CommandType = (global::Device.FirmwareCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.GetFirmwareInfoRequest subBuilder = new global::Device.GetFirmwareInfoRequest();
            if (commandPayloadCase_ == CommandPayloadOneofCase.GetInfo) {
              subBuilder.MergeFrom(GetInfo);
            }
            input.ReadMessage(subBuilder);
            GetInfo = subBuilder;
            break;
          }
          case 26: {
            global::Device.UpdateFirmwareRequest subBuilder = new global::Device.UpdateFirmwareRequest();
            if (commandPayloadCase_ == CommandPayloadOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Top-level response message for the Firmware category
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FirmwareResponse : pb::IMessage<FirmwareResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FirmwareResponse> _parser = new pb::MessageParser<FirmwareResponse>(() => new FirmwareResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FirmwareResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Device.FirmwareReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareResponse(FirmwareResponse other) : this() {
      commandType_ = other.commandType_;
      switch (other.CommandResponsePayloadCase) {
        case CommandResponsePayloadOneofCase.GetInfo:
          GetInfo = other.GetInfo.Clone();
          break;
        case CommandResponsePayloadOneofCase.Update:
          Update = other.Update.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FirmwareResponse Clone() {
      return new FirmwareResponse(this);
    }

    /// <summary>Field number for the "command_type" field.</summary>
    public const int CommandTypeFieldNumber = 1;
    private global::Device.FirmwareCommandType commandType_ = global::Device.FirmwareCommandType.FirmwareCommandUnspecified;
    /// <summary>
    /// Echoes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.FirmwareCommandType CommandType {
      get { return commandType_; }
      set {
        commandType_ = value;
      }
    }

    /// <summary>Field number for the "get_info" field.</summary>
    public const int GetInfoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.GetFirmwareInfoResponse GetInfo {
      get { return commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.GetInfo ? (global::Device.GetFirmwareInfoResponse) commandResponsePayload_ : null; }
      set {
        commandResponsePayload_ = value;
        commandResponsePayloadCase_ = value == null ? CommandResponsePayloadOneofCase.None : CommandResponsePayloadOneofCase.GetInfo;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Device.UpdateFirmwareResponse Update {
      get { return commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.Update ? (global::Device.UpdateFirmwareResponse) commandResponsePayload_ : null; }
      set {
        commandResponsePayload_ = value;
        commandResponsePayloadCase_ = value == null ? CommandResponsePayloadOneofCase.None : CommandResponsePayloadOneofCase.Update;
      }
    }

    private object commandResponsePayload_;
    /// <summary>Enum of possible cases for the "command_response_payload" oneof.</summary>
    public enum CommandResponsePayloadOneofCase {
      None = 0,
      GetInfo = 2,
      Update = 3,
    }
    private CommandResponsePayloadOneofCase commandResponsePayloadCase_ = CommandResponsePayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommandResponsePayloadOneofCase CommandResponsePayloadCase {
      get { return commandResponsePayloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommandResponsePayload() {
      commandResponsePayloadCase_ = CommandResponsePayloadOneofCase.None;
      commandResponsePayload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FirmwareResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FirmwareResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandType != other.CommandType) return false;
      if (!object.Equals(GetInfo, other.GetInfo)) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (CommandResponsePayloadCase != other.CommandResponsePayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) hash ^= CommandType.GetHashCode();
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.GetInfo) hash ^= GetInfo.GetHashCode();
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.Update) hash ^= Update.GetHashCode();
      hash ^= (int) commandResponsePayloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CommandType);
      }
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.GetInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(GetInfo);
      }
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.Update) {
        output.WriteRawTag(26);
        output.WriteMessage(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CommandType);
      }
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.GetInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(GetInfo);
      }
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.Update) {
        output.WriteRawTag(26);
        output.WriteMessage(Update);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommandType);
      }
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.GetInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetInfo);
      }
      if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FirmwareResponse other) {
      if (other == null) {
        return;
      }
      if (other.CommandType != global::Device.FirmwareCommandType.FirmwareCommandUnspecified) {
        CommandType = other.CommandType;
      }
      switch (other.CommandResponsePayloadCase) {
        case CommandResponsePayloadOneofCase.GetInfo:
          if (GetInfo == null) {
            GetInfo = new global::Device.GetFirmwareInfoResponse();
          }
          GetInfo.MergeFrom(other.GetInfo);
          break;
        case CommandResponsePayloadOneofCase.Update:
          if (Update == null) {
            Update = new global::Device.UpdateFirmwareResponse();
          }
          Update.MergeFrom(other.Update);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandType = (global::Device.FirmwareCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.GetFirmwareInfoResponse subBuilder = new global::Device.GetFirmwareInfoResponse();
            if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.GetInfo) {
              subBuilder.MergeFrom(GetInfo);
            }
            input.ReadMessage(subBuilder);
            GetInfo = subBuilder;
            break;
          }
          case 26: {
            global::Device.UpdateFirmwareResponse subBuilder = new global::Device.UpdateFirmwareResponse();
            if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CommandType = (global::Device.FirmwareCommandType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Device.GetFirmwareInfoResponse subBuilder = new global::Device.GetFirmwareInfoResponse();
            if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.GetInfo) {
              subBuilder.MergeFrom(GetInfo);
            }
            input.ReadMessage(subBuilder);
            GetInfo = subBuilder;
            break;
          }
          case 26: {
            global::Device.UpdateFirmwareResponse subBuilder = new global::Device.UpdateFirmwareResponse();
            if (commandResponsePayloadCase_ == CommandResponsePayloadOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
